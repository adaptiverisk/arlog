<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Excel on The AdaptiveRisk Blog</title>
    <link>https://blog.adaptiverisk.com/tags/excel/</link>
    <description>Recent content in Excel on The AdaptiveRisk Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.adaptiverisk.com/tags/excel/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>UDF Services (XLW Part 5)</title>
      <link>https://blog.adaptiverisk.com/xll/excel/2015/01/21/xlw-part5.html</link>
      <pubDate>Wed, 21 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.adaptiverisk.com/xll/excel/2015/01/21/xlw-part5.html</guid>
      <description>In the last post I described how to write functions that can input/output arrays, matrices and ranges. For the introduction to XLW series take a look at the first post. Today I am going to describe several useful utilities that are available in XLW. There are many more utilities that are available but they do not work from UDF and only work from macros. This is Excel limitation. I will address creating macros in one of the future posts.</description>
    </item>
    
    <item>
      <title>Input/output arrays, vectors, matrices or ranges (XLW Part 4)</title>
      <link>https://blog.adaptiverisk.com/xll/excel/2014/12/19/xlw-part4.html</link>
      <pubDate>Fri, 19 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.adaptiverisk.com/xll/excel/2014/12/19/xlw-part4.html</guid>
      <description>In the last post I described how to write simple functions using XLW. For the introduction to XLW series take a look at the first post. Today I am going to show how write functions that can input/ouput arrays, vectors, matrices or general ranges.
The starting point will be the solution we set up in the previous post. If you don&amp;rsquo;t have set it up you can download it.
1. Numeric array input/output The basic types for input or output arrays or matrices of numbers are:</description>
    </item>
    
    <item>
      <title>Writing Simple Excel Functions (XLW Part 3)</title>
      <link>https://blog.adaptiverisk.com/xll/excel/2014/12/19/xlw-part3.html</link>
      <pubDate>Fri, 19 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.adaptiverisk.com/xll/excel/2014/12/19/xlw-part3.html</guid>
      <description>In the last post I described how to set up a Visual Studio solution to build xll addins using XLW. For the introduction to XLW series take a look at the first post. Today I am going to show how easy it is to create user defined functions (UDF) for Excel using XLW.
The starting point will be the solution we set up in the previous post. If you don&amp;rsquo;t have set it up you can download it.</description>
    </item>
    
    <item>
      <title>Setting up a Project in Visual Studio 2013 and 2015 (XLW Part 2)</title>
      <link>https://blog.adaptiverisk.com/xll/excel/2014/12/15/xlw-part2.html</link>
      <pubDate>Mon, 15 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.adaptiverisk.com/xll/excel/2014/12/15/xlw-part2.html</guid>
      <description>Update:Added instructions for VS2015 (2016-07-16)
The last post was the introduction to the series of XLW related posts. Today I will describe how to set up a project with XLW. XLW comes with an installer that installs the project templates for your development environment. It is a quick way to start, but you don&amp;rsquo;t have much control over the process and the project template might not match your expectation on how project should be arranged.</description>
    </item>
    
    <item>
      <title>Building Excel Add-ins (XLW Part 1)</title>
      <link>https://blog.adaptiverisk.com/xll/excel/2014/12/08/xlw-part1.html</link>
      <pubDate>Mon, 08 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.adaptiverisk.com/xll/excel/2014/12/08/xlw-part1.html</guid>
      <description>This is a first post from a series devoted to building xll add-ins for Excel.
Add-ins are used to extend Excel functionality. It is possible to extend Excel using VBA in the same spreadsheet. However this way VBA code is tightly coupled with the spreadsheet, which makes it difficult to keep track of code versions or update code for all copies of a spreadsheet.
Users often make copies of spreadsheets because they want to modify something but want to keep original around.</description>
    </item>
    
  </channel>
</rss>
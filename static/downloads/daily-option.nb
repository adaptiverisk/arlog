(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    666521,      13465]
NotebookOptionsPosition[    660269,      13254]
NotebookOutlinePosition[    660610,      13269]
CellTagsIndexPosition[    660567,      13266]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]S", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]F", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dt", "=", 
   RowBox[{"1.0", "/", "365.25"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", "50.0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.67373310916434*^9, 3.673733127047265*^9}, {
  3.6737339184669576`*^9, 3.6737339291887183`*^9}, {3.673733989803666*^9, 
  3.6737340031449385`*^9}, {3.673734060207706*^9, 3.6737340754994993`*^9}, {
  3.67373412765322*^9, 3.6737341304601746`*^9}, {3.6737341728326807`*^9, 
  3.6737341743501315`*^9}, {3.673734314273548*^9, 3.6737343170607023`*^9}, {
  3.673753077325288*^9, 3.673753078056952*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pv", "[", 
   RowBox[{"T_Real", ",", "n_Real", ",", "k_Real"}], "]"}], ":=", 
  RowBox[{"FinancialDerivative", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Future\>\"", ",", "\"\<European\>\"", ",", "\"\<Call\>\""}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<StrikePrice\>\"", "\[Rule]", "k"}], ",", 
      RowBox[{"\"\<Expiration\>\"", "\[Rule]", "T"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<CurrentPrice\>\"", "\[Rule]", "f"}], ",", 
      RowBox[{"\"\<Volatility\>\"", "\[Rule]", 
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Sigma]F", "2"], "T"}], "+", 
          RowBox[{
           SuperscriptBox["\[Sigma]S", "2"], "n", " ", "dt"}]}], 
         RowBox[{"T", "+", 
          RowBox[{"n", " ", "dt"}]}]]]}], ",", 
      RowBox[{"\"\<InterestRate\>\"", "\[Rule]", "0"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6737350968485527`*^9, 3.6737351416345024`*^9}, {
  3.6737365010043745`*^9, 3.6737365016677475`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pvall", "[", 
   RowBox[{"T_Real", ",", "k_Real"}], "]"}], ":=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"FinancialDerivative", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Future\>\"", ",", "\"\<European\>\"", ",", "\"\<Call\>\""}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<StrikePrice\>\"", "\[Rule]", "k"}], ",", 
         RowBox[{"\"\<Expiration\>\"", "\[Rule]", "T"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<CurrentPrice\>\"", "\[Rule]", "f"}], ",", 
         RowBox[{"\"\<Volatility\>\"", "\[Rule]", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{
              SuperscriptBox["\[Sigma]F", "2"], "T"}], "+", 
             RowBox[{
              SuperscriptBox["\[Sigma]S", "2"], "i", " ", "dt"}]}], 
            RowBox[{"T", "+", 
             RowBox[{"i", " ", "dt"}]}]]]}], ",", 
         RowBox[{"\"\<InterestRate\>\"", "\[Rule]", "0"}]}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "29"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6737362124209504`*^9, 3.673736251799447*^9}, {
  3.6737365050560102`*^9, 3.6737365054946184`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"diff", "[", 
   RowBox[{"T_Real", ",", "n_Real", ",", "k_Real"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"pvall", "[", 
    RowBox[{"T", ",", "k"}], "]"}], "-", 
   RowBox[{"pv", "[", 
    RowBox[{"T", ",", "n", ",", "k"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6737343786251535`*^9, 3.673734410714946*^9}, {
  3.6737351322060723`*^9, 3.673735148803237*^9}, {3.6737362351149597`*^9, 
  3.6737362589584675`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"implVol", "[", 
   RowBox[{"T_Real", ",", "n_Real", ",", "k_Real"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Sigma]", "=", 
      RowBox[{"FinancialDerivative", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Future\>\"", ",", "\"\<European\>\"", ",", "\"\<Call\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<StrikePrice\>\"", "\[Rule]", "k"}], ",", 
          RowBox[{"\"\<Expiration\>\"", "\[Rule]", "T"}], ",", 
          RowBox[{"\"\<Value\>\"", "\[Rule]", 
           RowBox[{"pvall", "[", 
            RowBox[{"T", ",", "k"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<CurrentPrice\>\"", "\[Rule]", "f"}], ",", 
          RowBox[{"\"\<InterestRate\>\"", "\[Rule]", "0"}]}], "}"}], ",", 
        "\"\<ImpliedVolatility\>\""}], "]"}]}], "}"}], ",", 
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Sigma]", "2"], 
        RowBox[{"(", 
         RowBox[{"T", "+", 
          RowBox[{"n", " ", "dt"}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Sigma]F", "2"], "T"}]}], 
      RowBox[{"n", " ", "dt"}]]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.67373634584708*^9, 3.6737364321476336`*^9}, {
  3.67373647125706*^9, 3.6737365512963867`*^9}}],

Cell[CellGroupData[{

Cell["Fixed Moneyness", "Section",
 CellChangeTimes->{{3.6738259152895412`*^9, 3.6738259255145793`*^9}}],

Cell[CellGroupData[{

Cell["Exact n", "Subsection",
 CellChangeTimes->{{3.673753136858305*^9, 3.6737531389525075`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"resATM", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"it", " ", 
        RowBox[{"30", "/", "365.25"}]}], ",", 
       SubscriptBox[
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diff", "[", 
            RowBox[{
             RowBox[{"it", " ", 
              RowBox[{"30", "/", "365.25"}]}], ",", "x", ",", "f"}], "]"}], 
           "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", "1", ",", "36"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673734534063858*^9, 3.6737346106940417`*^9}, {
  3.6737525527660403`*^9, 3.673752553144553*^9}, {3.673753011742202*^9, 
  3.673753031165372*^9}, {3.673831829087943*^9, 3.673831832116435*^9}, {
  3.6738318805372486`*^9, 3.6738318807368975`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"resOTM", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"it", " ", 
        RowBox[{"30", "/", "365.25"}]}], ",", 
       SubscriptBox[
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diff", "[", 
            RowBox[{
             RowBox[{"it", " ", 
              RowBox[{"30", "/", "365.25"}]}], ",", "x", ",", 
             RowBox[{"1.2", "f"}]}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", "1", ",", "36"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673734534063858*^9, 3.6737346106940417`*^9}, {
  3.6737525527660403`*^9, 3.673752553144553*^9}, {3.673753011742202*^9, 
  3.673753012565666*^9}, {3.673831840695031*^9, 3.673831841527211*^9}, {
  3.6738318872385907`*^9, 3.673831887819857*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\\!\\(MachinePrecision\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.673831889982391*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"resITM", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"it", " ", 
        RowBox[{"30", "/", "365.25"}]}], ",", 
       SubscriptBox[
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diff", "[", 
            RowBox[{
             RowBox[{"it", " ", 
              RowBox[{"30", "/", "365.25"}]}], ",", "x", ",", 
             RowBox[{"0.8", "f"}]}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", "1", ",", "36"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673734534063858*^9, 3.6737346106940417`*^9}, {
  3.6737525427497272`*^9, 3.6737525432540674`*^9}, {3.673752999766861*^9, 
  3.6737530011526103`*^9}, {3.673831850740896*^9, 3.6738318511419616`*^9}, {
  3.673831895335024*^9, 3.6738318954887733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"resATM", ",", "resOTM", ",", "resITM"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"12", ",", "14.5"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "14.5"}], "}"}]}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{"0.03", ",", "0.02"}], "}"}], "]"}], ",", "Dashed"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673734624415484*^9, 3.67373463581135*^9}, {
  3.673736570468935*^9, 3.673736572703288*^9}, {3.6737516589293175`*^9, 
  3.6737516592609296`*^9}, {3.6737525709050064`*^9, 3.6737526081804457`*^9}, {
  3.6738307744611883`*^9, 3.6738307789622197`*^9}, {3.6738310902999735`*^9, 
  3.6738311032992725`*^9}, {3.6738316463023233`*^9, 3.6738316567765427`*^9}, {
  3.673831695913327*^9, 3.6738317657066813`*^9}, {3.673832219887678*^9, 
  3.6738322505396338`*^9}, {3.673832284972686*^9, 3.6738322856210747`*^9}, {
  3.673832331185317*^9, 3.673832396504833*^9}, {3.6738324738823905`*^9, 
  3.6738325013485765`*^9}, {3.6738326853076*^9, 3.6738327260682554`*^9}, {
  3.67383280960983*^9, 3.673832840001913*^9}, {3.6738331556371074`*^9, 
  3.673833169632131*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQPffg1vS+4K32DGCg4XCC9XD2Vbaj9unKD7apLtd0
WNOxRNGh67z9oS+XXhrnaUHlr9qvzHjKlvtUy8Hq+OZjXR637JdveHJC1Ewb
qv6+/Xn9jRMOFWg78C/12vcr9ZG947XfyRPnakP1P7WPvfh5KeNBbYfGNGvJ
Dcuf298JqNI7dVcbat4r+3VT22pXftV2+KyuU5L68o39xHWb1pzh1IGa/94+
frPndjZpHYdNJX3pvaIf7eMO3FT+oKkDte+TfUJOtuwvMx2HnKtsohnbPtu3
/fpbUeWkA7X/q/2j7Zy9m310HFTM6g85hX+zX9ZSUH4zVAfqnu/2T9aHHxSN
03G4N+17vuyPH/Z+nE4fO1N1oO77Zc/Z4ZwamKPjAJae8ds+8fS1dU1FOlD3
/rHf0ic5zaBCxyEg4sWpS5b/7Bt6Tt3NqoW5/7/9BI3Um3ZNOg4tMQZ7wnIZ
HLKdSx9ub4P5h9GB9dy2dfe7dBwe9rwROrKX0eGpgs6ifX0w/zE5cJqv+hc9
ScfBdu+KTEM+ZofMTh3xfVNh/mV22MCQXfJqho7DrLcpB+bFsTjMej7h89PZ
MP+zOsjtbby/ZZ6OwzdZRXGe9awOrRuPsEYvhIUHm4PFpA/Hby/WcQj2u5tb
+Z/NQavZSctqGSx82B1+r3p6v2KFjgMAEGMKVg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{0.03, 0.02}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQfYL1cPZVtq32vD6bNd8t1HKA8I/aJ7gV92eoajus
6Vii6NB13n69isGjj5naUPmr9m9MsiW6Z2o7WB3ffKzL45Y9V+PRY//2wtTf
t18y6SWr/W1tB/6lXvt+pT6y38/xZ3PKZ5j+p/b+e1mTd7HrODSmWUtuWP7c
fsvigF5ZSR2oea/s1zWy79HS0HH4rK5Tkvryjf3qX0oHQ0x1oOa/t1e5LGDy
yUHHYVNJX3qv6Ed7g7NXr7h660Dt+2Qv0xbG3hKi45BzlU00Y9tn+wTtTd3X
YnSg9n+1r4mQlYhP0XFQMas/5BT+zX7Rjyemltkw93y3PylnPq+6UMfh3rTv
+bI/fthr2ayztSyHue+X/dpv+T8aa3QcwNIzfttfvZTqkNwIc+8f+/MLtna+
aNVxCIh4ceqS5T/7n9d4l0l3wdz/317F8h0Pa5+OQ0uMwZ6wXAaHs6cyRNdM
hPmH0eGK/yoV8ak6Dg973ggd2cvosIX98GXvGTD/MTm8Te/l85+t42C7d0Wm
IR+zw0VVeV3VeTD/Mjv8ELjLcWmBjsOstykH5sWxOLS3cvNFLob5n9Xh9LdW
r71LdRy+ySqK86xndbj5RbmKcQUsPNgcoiebCWqs0nEI9rubW/mfzeFAYbGr
8RpY+LA7LFSfJKq6TscBAH/E/q8=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQfYL1cPZVtq320W6Zhku2aztA+Eftmxuj1/Vf0XZY
07FE0aHrvH2zTK7Am4cw+av2Ga6Xf7/4oO1gdXzzsS6PW/brxZ9ytDPoQNXf
t5c4EXpxGb+OA/9Sr32/Uh/ZK230Uz8qqwPV/9R+/6W8Xzu0dBwa06wlNyx/
bj83acqyZjMdqHmv7Js7TRotHHUcPqvrlKS+fGO/84af1kcvmPnv7c1u39M4
EazjsKmkL71X9KO9CVfdhGvRMPs+2U9a/03KOFnHIecqm2jGts/2K3OUP37M
hNn/1f5Sr+ZhlQIdBxWz+kNO4d/sBbYZMN4uhbnnu71H8UdZpWodh3vTvufL
/vhh39LffIG1Aea+X/ZvGm4GTGjRcQBLz/htXx4f0HuqA+beP/aPWbQi9/To
OAREvDh1yfKf/SfDnCk5E2Du/29/7vE934eTdRxaYgz2hOUyONR1frwvPx3m
H0aH4A8unLqzdBwe9rwROrKX0aGMpYWRdy7Mf0wODrXy3Yfn6zjY7l2RacjH
7BC7MIspZBHMv8wOe3c0Zx1couMw623KgXlxLA6PuhIr+JbD/M/q4Ls+YI7t
Sh2Hb7KK4jzrWR1OPpTjClwNCw82B4MujQNea3Ucgv3u5lb+Z3PI3FPcq7Me
Fj7sDodV/4r92KDjAACyDQMV
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 14.5}, 
     PlotRange -> {{0., 2.9568788501026693`}, {12, 14.5}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 14.5},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"n\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Medium], Method -> {}, 
     PlotRange -> {{0., 2.9568788501026693`}, {12, 14.5}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.02`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.673734636706685*^9, {3.6737365667093134`*^9, 3.6737365731572046`*^9}, 
   3.673741965784775*^9, {3.6737516299967875`*^9, 3.673751659962138*^9}, {
   3.6737525844713774`*^9, 3.673752609519578*^9}, 3.6737530469091263`*^9, 
   3.673830779832695*^9, 3.6738308106036043`*^9, 3.673831103962706*^9, {
   3.6738317244104204`*^9, 3.6738317661074047`*^9}, 3.673831865905613*^9, 
   3.673831901546358*^9, {3.673832234740476*^9, 3.6738322512577667`*^9}, {
   3.6738322874250097`*^9, 3.6738322982375364`*^9}, {3.673832335972989*^9, 
   3.6738323974684153`*^9}, {3.673832690582238*^9, 3.673832727223332*^9}, {
   3.673832817663307*^9, 3.673832840502598*^9}, 3.673833170647808*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using long term n", "Subsection",
 CellChangeTimes->{{3.673753147869405*^9, 3.6737531527580013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "14.5", ",", "f"}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "14.5", ",", "f"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "14.5", ",", 
        RowBox[{"1.2", "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "14.5", ",", 
        RowBox[{"1.2", "f"}]}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "14.5", ",", 
        RowBox[{"0.8", "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "14.5", ",", 
        RowBox[{"0.8", "f"}]}], "]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.04"}], ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<premium rel err\>\""}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{"0.03", ",", "0.02"}], "}"}], "]"}], ",", "Dashed"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673735023103979*^9, 3.673735065928793*^9}, {
   3.673735156998191*^9, 3.6737352315555964`*^9}, {3.673736600222391*^9, 
   3.673736639314528*^9}, {3.6737366714057083`*^9, 3.673736756119498*^9}, {
   3.6737420001361694`*^9, 3.673742002484271*^9}, {3.673742039329338*^9, 
   3.6737420707845697`*^9}, 3.6737518432594795`*^9, {3.6737523300050054`*^9, 
   3.673752335060376*^9}, {3.6737526578791895`*^9, 3.673752719150693*^9}, {
   3.6737527657305636`*^9, 3.6737527814148493`*^9}, 3.673832172571147*^9, 
   3.673832433248458*^9, {3.6738329357709723`*^9, 3.6738329584133015`*^9}, {
   3.673833015161359*^9, 3.673833056123461*^9}, {3.673833213640569*^9, 
   3.673833226150157*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Dashing[{0.03, 0.02}]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1:eJwV1Xk8VvkXB3CyPFGU0WIPTSRPRCoVnZs2pKzPvQqFIiFM1onJEpGlZKkf
WpiMiiI1qPnFKbI/9GwRxr7XGKGSyPO7vz/u677e/3zveX3POZ+r4e5v57FE
RESkmn7+/7aZjOayWLUQVfdYl8V2QE2bZtu3v9SC+GHzOwfaHfDzk1U886u1
UCb9q+LaAQfMOn+ft7u+FmzspRZcZh1w4Aubr7GzDrQiFzZEq7MweGFt24RK
PfBfrpmwOMdCcxc38szOelAYlFE4FcJCparCtj5WPVjqPbjgGsnCqkjTdv7V
ejimH1G49DoLl4qdev9CpAESAvNEVz1jYbZUcWfcUAOorUwzJKZZ6Os9e1wo
0ghfmj8efjbHwj3NRFeYaiNMBFSnyoiSOJjM7/IhG8FL/pFt2AoSmSvn/rZt
aARjsQcZurokVq3Z36v6qAlOtqwI1z9BYmpoysmbDU0Q+/LSos5pEt3ft/Wu
HG4C1S3bPWS9SWRkn+0TU2uGUCWpmMxgEm1Ur/WPX2sGpUCNoLwk+nvrOwfL
AtmwRjHpMP8ZiexlZ5My0tjgWBxwZ+A5ieUzs4aBpWzo7lIY7KwkMaFmdcyW
STZYhpSIxtfT9Z2yVS/yboFp4Z5qXgeJqw/31V+50gLXiEq+Xg+Ji4b+/l4P
WiAHW44GD5DIXZJStWGkBewL7+6o/kBiyO8NzrlurfBM5fZL1+8knkykxCOj
WoEd/IvE6kUSzc+PFLncbYVtQq5ymSiFymbi80rdrbD0sp/Li6UUvuqHrEzH
t8A6KHjftprCh42tRFDoW9jHHzX6V4HCtFKXMbsbbyHizI6SaWUKPaLDd6wU
vIV4Q8u8Gg0K41K7vGu1OeD20KrnCpPCC+L3qox2cKBX0em6rD6FfmHeP+Uf
5MBOraLcaAMKHV3nXsR4cMBD7fG5rdsptBK8kpkO4sCIbXjoeWMK95onuLnF
cqDjpzfBubso3LRlrRRxjwPjz2eGGvdQqJbf41zylHZP9d1agkJ5hYInatUc
uPBX98ATMwoXhEaOP/o4cGdzSxp5kMLWt3b3/1LjQtRUZNSAFYXV+5TmdfS4
8FEryvPEUQorKvqPZplyYfmHjMkmawpz7wZ8DXXmQvJF78AQOwoz5Y0tR324
MNdfVVpmT2FivPA2Gc6FobvWSiMOFAb6Xz2wLZsLV3bF/atEUeg1yMrKf8iF
m/df5KxzpNCZUp2Qf8GFjQGWX1cfo9C2eYi41MCFtZvd1BZpH4RHGdPtXGib
Hdv6/jiFu54FjrmNcqH21lUy34lCfe3dJtyvXJj1ef2HuzOFCiuaBktW82A+
hjpY7kLhe7/EE4o/86By8zbS7ASFWa2WHTGGPOho+/66mvZxvWUO/xA8cN91
5PcdJylUutrcyrLmwXOJ/BV5tLsmkizQhQfrpi00hbRvHbF6s9GXB6d6nadt
Xen6Hy+HtAs8mGW23syirSrT8mI+gQdlZqc2tdHu8U0x8rjJg3OxZa8ZbhTe
YR8paf2DB2KxhsF6tE8yZTcZ/8mDiGoVZ0va6smt+XnVPBhgJaU40e77eHXd
Mi4Phpu81d1p5x22zg7qpc/riNA9Qdu9aMXqngkeOGoeq7WmrbmMc+3QAg8e
M86J76A94J0qXSrNhx2shUV52veabOKUFPngtVmjeYSu7/QmOZFYbT54BrAv
ltD+OZF7YWIbH0wd6/T9aA+PX/9C7udD4dTjGU3aBRZ2Aa/s+HBZ7ntvC30f
ng9/+qjjxof9lnNS/rS1pfge6f58OMHiXZakPeaV3rfwGx98tWJ9Muj7ftBg
7+SZzIcUsxG2Au2zG1e1vc3mw6tVDzGd7temBIHNzod8aPzBcpSg/WE0o/n3
Cj4cXWNTdI7ub9Eh1sHldXywS+az2XT/mYy23b0DfLARKWz2p+fjH88b5eZT
fCjQfc55Rs/P4zrS4KmQD1/z6mb+pedN73K7VpyKAFT3vuq3pOdxcvhm3r+b
BFB63pTvQ1L45ICjiuNOARzx79WPZVFoINEhp0sKIDpAKySHnu/p01nJGacF
oG9sEpdNz//TN8cYi+cFUNHhaHndlkKj2M4FzjUBFEeJEZ70vmwX+3s0pFEA
lily/BJLCr+633LvaxdAT795ip8FvV/Vzt0WIwKwuPU6eYM5hcYx3TwVsXdg
5ZyWG3GAwt2ivZXVJu+gfhq+cYBCQtifLvvkHRzhDw6ob6X7b6pTol/1Duxb
lHyC6PyIDQ9osmG/g8n48ajXdL7Uzy6KpI+9gwSh7DVzOn+OflL2W6vRBhmu
nJplGyh06WeZq6e1gVLUeOF5Ot8urrt9am9uG0jHi2V7yNP77jJ00b24De5p
V0/ZyVE41HG+LL+pDVaGhMqqylDoy7umqSPWDv+V/fVEgDidbzWNCwZB7bCp
flpBbZrEW6JyCvYx7SCRXn6qcpL+v4Dj1qDUduiJ/08HNUGi6MuRs+WP2oHP
2R10cYzO/z/F2ncNt0PqmbE76XS+3/jDtHQf+R6+HR63H20k8Vl8qQfLuAPY
Ohu8I26T6HolZ9XDQx1wc314FJlNomxSXM0C2QGSRV5nmDdJ9Lp6TCM/uANu
Vz4RNKeSqJop2j39tAO6Ltmf6bxEYvzvtg6pmzthJsX8M5wl0alyyqxZswv4
ele8ggxIFJsxUN8r0w0h3zvNI1+wsPBBiJWTTR84Rt8PTqtzQLNG5m9exACw
zfpmSp7Zo7Csquqs9hCEXr/gkldgh6Yqfr0lE8OwMsuorfOpLX6YCQ4y7xyF
LW2tDQblNqhwIGdsQ8E49BjROVhsjT7ut87Nen0EVcG2owVyR3Hz1BdPZbsJ
kD94y8zKzwoD5nwhVmkSFvbfcCsWOYzXd6rV3Y39BGIxAqH0NQuM+HsmKDR0
Clqlf9ilmZrjRhPH9Klj0+DmuVxMUuEQJgnGPmZYz0DeiqL9SpMHsERn6Z+d
Rp8heFxGOf+f/ZhYYV9usfkLXLk9Ou40ug/DdGVeG2p8hUyjBxaO38xQy5m1
u0p8Fn5tuihVp22GSbWNk+fnZwF4D2aVHfZi6Ue2fFP/NwguMlgtmUPgh1lT
IqdmDrZpT+x/3wfYadJVkPn8OxR7VaxfH7cHE/cwfjO8PQ8P/5gW/OxgitNh
J1O+ZSxAT9257K2qJuibtaHAOOEHZN3HfeaLu/B+yAU9ZZ9F+L62T14guguz
kuc/abkJIejTr45uQmMsKIm77r1ehHDTsUr7TdkYlya/KV5MFyHs6mTuVx7a
gXWxime1ZUWJYfeDt9b5bcehrm1OGlGiBAzy/Coeb8MT1l4fSuZFifnili2T
o0ZorOFeusJ/CdGqHPGiwtgIlUfSIph9SwiUVf60K3MrHq/vGOo+LkY8ykGH
zH8McU5yLNa1RYwItEya45GG+Nl9eXWohThR5hQk4vDSAL+VnhGzqhEn5KLN
GFJMA3Q+mRgxZSRB/Pgzfu/doi2oolOTpvtEgtDRY0c+19qCJrY1fdvXSxJJ
MecaIlz10dP3u6EwXZKQF/+7Wz5GDz/eO6TpLMsgls0VyG3P2Yzcnc4WiVEM
IrQ8XI3RwsQ3lWvVE2IYhLfRh8/RjUws38v/GhfLIBTmNQJ/1DIx28IyPzqB
QZgcOeD5tYqJ7seMhWGpDCJhLUfz0xMmfg5bVXYml0GIL/yXsySTiQrP2eoH
XjGIMMlXffdcmChtkjBrVs0gno+EuW49zsQF3NdKvGEQ2W+7Y2pIJvbX/xVu
0sAg7jcxSoatmVjY/qBtK4dBFA9G5hqYMdFkNjZZs49BvHu9vnZUi4l64cQp
9QEGYXynyzl6PRPVhfM71YYYhFR/dYayOhMlGIGjimMMYktF5JCtIhNb17iZ
yX1iEJc0fIW1y5j4KltFccU0gyjLtc44vZSJT9XeTy7/zCB8zDc2iEkw8aaW
9e2l3xiEaora8v2LuphYKB0k+Z1BcCwmlIe/62KEXp2l+AKD6Fdc03R5Vhf9
nkZrLFlkENJGv6zR+ayLrttNvwmFDELCpEOE/UkX/wcm9QOf
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"premium rel err\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 2.9999999421768706`}, {-0.04, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.02`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6737350749045362`*^9, {3.673735172942709*^9, 3.673735238219043*^9}, {
   3.673736591379451*^9, 3.6737366454922132`*^9}, 3.673736687874827*^9, {
   3.6737367264719276`*^9, 3.67373676274842*^9}, {3.673741983768905*^9, 
   3.673742008989306*^9}, {3.673742046252355*^9, 3.673742076869539*^9}, 
   3.6737518524197073`*^9, 3.6737523420918107`*^9, 3.6737527391246543`*^9, 
   3.6737527951386776`*^9, 3.6738321846557417`*^9, 3.673832444830492*^9, 
   3.673832942523243*^9, 3.6738329775508966`*^9, 3.673833026115584*^9, 
   3.6738330687384396`*^9, 3.6738332370120916`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "14.5", ",", "f"}], "]"}], "-", "\[Sigma]S"}], 
      "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "14.5", ",", 
         RowBox[{"1.2", "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "14.5", ",", 
         RowBox[{"0.8", "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\[Sigma] rel err\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.04"}], ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{"0.03", ",", "0.02"}], "}"}], "]"}], ",", "Dashed"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6737411681968126`*^9, 3.6737412897088523`*^9}, {
   3.673741375679921*^9, 3.673741376196063*^9}, {3.6737417026928782`*^9, 
   3.6737417062629156`*^9}, 3.673752127109142*^9, {3.6737523518721905`*^9, 
   3.6737523532587795`*^9}, {3.673752824167962*^9, 3.6737528694076576`*^9}, {
   3.6737529115909433`*^9, 3.673752922018859*^9}, {3.673833093980359*^9, 
   3.673833102776343*^9}, {3.673833467354437*^9, 3.673833488500064*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
tRuH/wPdGLmL
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Dashing[{0.03, 0.02}]], 
       LineBox[CompressedData["
1:eJwVTns01Hkc/XlkLKJ2K2qk37A9RGpVlhN9v2a3IzbbVMcukSa9FEXzG8wy
MhiPJtVEUZPOaiusc9aYWtY++IzHUFGpdlnKaTw2E+swHs0Yj9nf/vE599xz
7+fey4qK23/clCCIYPr+R85Y+ouQEBXCLr1HT7oUgTOnbd/zcypEsiK5ktVF
MFW17OXuyypUHlxZ9pN9Edzklb3c0apC3jqm37R1EfRPt79i+bQgItJDfGGq
EBLm7DtHHVtRfO+Z4aeqQpB9VNmTNfgIRccM3NVHF8KAS89ANdWOSlhxq4iH
18HB7smAfPlLVC50ux6LrgE29hXYVv2Fau/fnc4xL4CHOYrjId7diOQor/BG
r4LZ5Gek/+JedOOo47R7rxQqyhP3hHPUKD5WN+elvQLsx+6p0bgfLdks4ys8
L4Oxur7+1PpBNO7MDpCW5YGf49m38tF/kHqN+Zr60IswPJnA390zhLD19qb3
iyXgsOuWZm3pezTO0RZXT+ZCTFTxGV30CMItN3Icp3Ngk3b6BHP/KMI//DHR
/CEb4mdikXjVGNqSfGx3HTMbrvo4tXwvHkfSoFDrj3EWCN9M8pOStEh6OzhY
IBDDBt/QAm3YBCJGbkW6t2XCxT81I9f2TqIl8U7iTmYmyF0tf+7ZNoU4hhsH
NBkZIPnlQE3gpmkk2l4RphpKB4Hb4gZP1gek1t2ZcQtLh3URITvqzXWIG6Vg
Wb0RwUXV4zHerA5VhbHzfSNEoBhp/+RJnx4pM2uXHu5Kg2GdH77VNIOU8kOe
hyzSoMf3den1WgMqGXJuqNh8HiQ7Gamet2cREZhwrOFcKkwIDl/SX5tDyiGy
O65SCLE315Z6584jsmtkV7Y+BcoSkz2YMQuIvMM6b/wmBW7mzY6vO2JEyuIZ
rxVVyVAqz7p62oXAJSsMYhEzGSzzmisXCgiMndOMrtLvoEW88tR6WxPMlZLC
QqMABl9vD2eJTDCWPKjLPC+AyL3Rw/JZE6yep7pz9EngzYpS2MWZYvz7r/ll
oiRgvssXuqtNsVKxkFFnlwQHW7sHew+aYeWl1gknWSLMWGjE3KdmmDQNmry3
JRGmomwakwLNMck/cqKhMQH0ipNme5rMMa5zjVwWngARhyVC7bZFmFCnvh6e
54Oja1O+W9UirLbcoL5SzAfffU1qLxcLTGiLY0e/5MOJWIOnscACq7vUfRot
BSN3A5wjbBmY6+YjHpZR8MInIlAiYmB16NCLlD0UNNfZk7kZDEwmsE+7fEVB
jf+rD1limstU29oCKZAFBt1Lz6X97g5cZgAFUWHeRoGUgbFtnW29PwVTgmXV
J0sYuORyVqPN5xQ41LaTu5S03i/3fs6iwMo3V8duZGDiRweTVJKCOfjiGW6m
9zzeZ9i4hoK+1t9SfB/R/p1WaTmOFFR0lXdu7aD7GWc72PYU+OrEec5qBlbG
dF5otKHAIwUfJftpvvzbg5Q1BaRx1sdpkM7rIMI/taJgEYMaWqmh+1bf/zeb
QcGzFUfYS8fpvI4lnK9NKVDKHFfaTdB739aUECYUPHD6e8xmis7buJX10MiD
onV7b1vqaf/7LIXDPA8kFVZ8CwMDi5oDGtpmeSD0aAkyn6P3NtYQaQYenH2Q
zjJdoP+7HsV5zvCA6+WnNxppXUPZvtPx4D/FdmRZ
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
TjT+H8WuXEE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Sigma] rel err\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.02`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.673752929882059*^9, 3.67383311477822*^9, {3.673833475585184*^9, 
   3.673833496895864*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optimal n?", "Subsection",
 CellChangeTimes->{{3.673753177615955*^9, 3.673753183266223*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nn", "=", "13.9"}]], "Input",
 CellChangeTimes->{{3.6737521778290286`*^9, 3.673752183349081*^9}, {
  3.6737530910898623`*^9, 3.6737530917220383`*^9}}],

Cell[BoxData["13.9`"], "Output",
 CellChangeTimes->{3.673752184366627*^9, 3.673753092005966*^9, 
  3.673753190997059*^9, 3.673833668887144*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "nn", ",", "f"}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "nn", ",", "f"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "nn", ",", 
        RowBox[{"1.2", "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "nn", ",", 
        RowBox[{"1.2", "f"}]}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "nn", ",", 
        RowBox[{"0.8", "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "nn", ",", 
        RowBox[{"0.8", "f"}]}], "]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<premium rel err\>\""}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.02"}], ",", "0.005"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{"0.03", ",", "0.02"}], "}"}], "]"}], ",", "Dashed"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673735023103979*^9, 3.673735065928793*^9}, {
   3.673735156998191*^9, 3.6737352315555964`*^9}, {3.673736600222391*^9, 
   3.673736639314528*^9}, {3.6737366714057083`*^9, 3.673736756119498*^9}, {
   3.6737420001361694`*^9, 3.673742002484271*^9}, {3.673742039329338*^9, 
   3.6737420707845697`*^9}, 3.6737518432594795`*^9, {3.6737523300050054`*^9, 
   3.673752335060376*^9}, {3.6737526578791895`*^9, 3.673752719150693*^9}, {
   3.6738336996365023`*^9, 3.6738337309171658`*^9}, {3.6738337726019106`*^9, 
   3.673833773812058*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
atY54+A/RheV2A==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Dashing[{0.03, 0.02}]], 
       LineBox[CompressedData["
1:eJwd13k8VN//B3BRpkUlJPvH1iJSlojS66JEnwqJGPsyY4/K0le0SGULoSRp
t5UoWiQfV5EtqSS7su/LzBCJ+N1+f83j+bj3nnndOee8z3tknHwOM7i5uLi8
FnFx/f00GT//xdz8Pa5PGtSt8oohZU0+mH46/h5nBXYr8m2NISefCtUZxryH
Z83e8zGcK2TyiYy6nRXv0VdT0Cx++grZ9bPmq4xWOTycdVOV46NJ/7l1DaMS
FZCcv+kz0RBJGto6WrhqVUDf+khG3L1IUqz4UUOHeQVkV/B53vKKJIvP6jR+
janAAv/dl795IsmlPM5Nr7kqQesv3fNMM4K8uSyn5WJPJX5afPy8Iu8y6eUx
TV/gqsI3PXbZ0guXyd0fiNZTklWoOfGiyOnIZbI7+murp0UVtpr3tCv8ukQq
8c+0mVZWYXPuqpdD+pfIYuE9PySzq8Er0PvZZziM7JZr6X5xsgaPPQOODPiF
kjUr3KMS42sgIXJXv/JAKPlyYlr15LMauDXq1E/Lh5LhpWtDt43XQFx4fYZe
w3lSydlU+rHHR1yqUzI8vus8GXC/0uauYy1EsuXORQufIy/GtXq83/gZzcFh
Fkt/nyaDFj8oVtf8jJezhXYThafJY6c8BB4afMau8CoHs+DTpKXDzOtQxmdI
th1afYzrNLl527plxIPP0Nu+eYK1Mois/XQ4o1DqC65dflB8UOcUKbK6ujt3
bR0Stu57OtfnRzYdi7QTla/D28HkHVwFfmRy7f7mUNU6dA+vfWUS4UeKxXyo
NTeuw8jTWsUGJT9ScuXH17PhdZBOX2TvFHiSlF3xOXbfXB0YB5PWcYmdIJVo
DTt/dH3FzJ+Ee2pyPuQI8/pLQ/ZXJEb+8rRoOEY+KbdQyVv4io/vVfPZEcdI
5UuNGy5K1GNc84tiDMebVFnSvEbRoh7STY+dDaq8SA2etv6AqnpYtC73nY7y
IImFzoRVT7+hoztIrsWBSTrpKORuLf6Gg6VFJ1/KMsmw077VJjXfEODrXjzW
wyArpue5Ega+YaBxc4mvB4M8xBI/tk6mAVb3SaWs/7mQtp3mhtLxDWgfmXrE
yHQig0qr5lT8GiH4O7xO+5IdeWvRGhGz0EbYP3rHzpOyI4thqeYX14gQ2zOX
yFe25KKiPveX2Y3Q5DNQjx+2IcOf8zRq9zZiesXDpTx0a/J6ms4zfYsmyGtG
8uwxtSTzLz9jmO9oRgnRraH04DDpEJEilLWvGUclErfJ7T1Mroq6WDpn0Qzu
GHm/zH5T0i3GSuahfzO2tIhx05VNSclri9o5ec34YXU9PiTMmLx83/RI3JYW
EBGRuRd495PW/7H1Psi2Ij/XNik2DuRSspUtpdqKbd+vPXpiuZt8WfL+7gnd
VhTnEpNJsjokf1nyvKhDK1Je/d77/o02+b5at9AttRVTDzj923g0yK1NV1V4
RdowwTLuSa1QIHkmVKR1V7bjY4cB0m/yI7hDaCpGvB2e7Dl5SxchTH2c/tCm
0I4dn9+3jm4SwUDmf4GnDNrxPCJCpPv+P6i1M/qUe7YdCS+41J23bMSNaocz
Upx2vHHfkKFeoAql+7Ftsw3fkTJ7IuDLKgJpsSfyjHq/wznz4mNjfwJSIebh
SRPf8WFJVuneVgJrLMXV1fh/IDlV9vGtNF1MrcyI8jD6gf7gKt/l6voo+V+x
dvObH7hRfDA8cocBHmUGHLA26cDCLbMMnt5/oXRe67y4ZQeuRQRHyuofQK7V
3ItW+w6cYWunvbl7AM+Xh/5j49MBzS83M+3pB/Gf1xWOTUwH5MztH4dVHMLn
bQ9v2NV04PLbBMWpMhNMFXzpcTTshPbZffuk6GY4dTVRVNakE5kEDeHnzTDr
fvRQ19FO6B74/Lww0wxc4u2vnFw7Uc+QtQ+aMsOykIFI50ud6PfWO+4dewQS
ugvbGGWduOFX1s98ZQ69KqUQN6ILy0uu1+Z2HsVPfrXQxYZdaH84sVOO2xKZ
llqX7xp3wSrtEY+HrCVWDey92mTXhfPjhiknnCzRwmufZhjSBeWKQ2kBHZY4
vufqx02FXVA5nf78TL0V7pI/JQfVuiEgdO0f6dvWMKPNyV7c2Q3DbapBvq+t
wWvMvUlGvxu9Dxv3ptRbw+v7KlWrw93w12XMnVtugx1/NhpU+XZjZ4mzR7yf
DT5r049lPenG8SBLj1+6tlh4UVzsvrEHPQUS5WKldrhxUrcxVLkHa67lS0Q3
2WGbStl4yvYeNH64Vd85agen7CrpWv0e0Dw2sLVF7FF+vz5U1aEHGgoVsRme
9oiJHTKYvdGD8JFtuaW8DpByF/4UvbwXm1SYA//cccCrDcn9aWt64X5SUHB3
pgNMesS5SJFeqB6RY5o8c0CovYwKe0MvZjXri01LHdBnrpRgrt8LoScClZV9
DsjR0zsqFdwLKf1E10RFR+hIHPuRO9oLvYOrgxayHXFr5ztdp5+9OCkm98n5
hSN+04UfCv3phbH8ZsWi/xxRkFzs9j++PvyYfL/dqNYRqutWc/QU+1D0jSAa
xhyxSeDp4ga3Pmwtpu2s2uIEoaUchbnuPghfa+IKfOCEkxsNonOG+9D58syF
U4+cUGdwc8xhog/5mml1Ps+cEHtRL/89dz8en+VeTpBOWM6TsCtWph9jt0d0
3VqcsPBHzVjWvh8JCQ9Ku1Y5Y2jC38+wpR+FL7ZNffV1xtYIg6HAzn4IG4mz
9AOc4Se1ziFjoB+8cu4m2aed8cew4F/e6X4sGfdwZV5yBv/t37JlggN4cku1
+1yKMzQMz37BwQGo8XyNsShzxvlb4cqaJQPwlLjhVczvgnIVq4fMigEkMiwD
/l3rguUVCmLXawcQKzgy/EXUBYns6iU/2wZQYJq044OsC9INVrbnzQxAxEB9
k6+6C2pYV6OU1QahHdZXGmHhApG9KQPr0wehG7xdbct1F1wxylVWeTKIPQol
yV3JLuA+VOq36/kgUg8phMWnumDUYpjL7N0gAg7XznU+dME7t52i574PYu3s
wfVEvgu8o1uNWoSHUO66EDRfS13/Kv445vIQBnd58j3mZkCzaSs7OWYI0ToJ
8kVLGMhu09dMuzYE4omof+VSBpJ6PUvfPBhC16RYfd0qBrym37QOkEM49PaC
WK4YA8LiNnz6v4awdEuZVqQKA55Ot7yn3YaxOSBu7ag1A+mV5/+k+A7jRJI7
0uwY6FJ2vUKcGka6pfM5S0cGLGdVnkRcHsa/mXl2T5kM7EmsGBFPH4Zu9rzi
huMMSJRzPInuYXCtEhhRvsjAUaWm2Z6hYaiIntmccpmB+Pj/oiI4wwhbRjZx
RzKw1D78cd2iEfi+mEsui2Fgclpy2EV6BDmhaXoCNxioUTDyiLAdgRef2bOW
LAZoccq/tzBGcJVTacOVzYDelGBkndcIOFclqmVyGCh49z1LPHgEYfsWzx/N
Y+Chtd/gk5sjiIoWMIsvZCD4yh23usYRBNqkduhVM7CF/ZMpfngUkmpZn/L7
GDj08ehyHatRXHvafGv3AAO+Wa+f2DmMoqg/WLN8kIE8x5DJe8dGUbb0U9eH
EQY06haHbooaxZd9r32fcRjYnS+Yur1sFHNres0H/jBgH+tPHP0wCoe7wVd0
Fxg459nYfapuFIzxuxVJXEy8k0vZXNQxio5Mc5OdPEwYJMoW6P0ZRaLRKj77
pUwc8lf5aqwxhpVxKn3iAkz4mCYEHNcZQ6Hz8WIDQSbitvwUTdgzBsV9xdXH
hJio6y1waDg8hu3qblEvhZmwsCDGbHwo29xbkBdnwl7TeJlH5hjSNm7afU6O
iXOCz7KjcseQvfXdi7PyTNwfFzB58nIMqrOJscHrmejJaLjOKhtDRfYi/2Mb
mXATsZMP7BzDwLjgETVFJnxnvBAmNg7NYYV3+qpMHNW8qwTZcZhkvItXUmNi
t/9X0d8K47jvuueCgDoTK9hakz5a42ga1PjybTsT6QO8WdaW49AS8QjW1mKi
rfGugNr1cexm8HacAROla+sXRlPHsfytidpOgolHZrTRzLRxfF+d3DxJOfCT
d4XUi3HEfmIqOugxIVChHby8fhz/C+HRWreXCXnrIQ5rKQu2dWuTl+1nQuT3
BfdaPhYeDlWE3aK8Ilmy4zE/C2tMRjhK/zLBaTD5yBRhwewo29HgABPk4VcZ
bRtZWH/wV7P1ISby2CZShYosZG1x2NRKOT1uKDFpKwtxIbmrLY2ZiK6VDD2s
yUJ0G9fz/SZM0PeH2VQasOCdnXFH8DA1n4OSX9P2s/BdIHnROcq64a+MLhxi
QS1JVGCI8qbyIY3dFixwizgYvTJjYkrXdM1zBnV9OIyuYc7EUMfQ5avuLHyM
uhgUR7n9bNj8MW8WfCynbQcol/33aljBn3qfJNf/XbVg4qqWVPmdMBZSXtgb
VR1lQiKuWd4znAW3O8dC+C2ZyOxLvKARzcID2ZWp5pRLElbofkxg4euVg5nN
lA8Mld+5kcSC3nz8DRErJhqJ0HnnFBa26+SGmFMeG/315vd9Fv6tvb61inLQ
nudi5eksLH/P4uKiM8Gb4vO/q49YENmBz+qUJQ37NDblUe8j/+b4DcqZt+9d
m3jBwiyPs2EFZfWfNpPFr1l4dGhy/STlA/e/PjN/y4Lft+z5fdZMNP2K4Zd5
T41/Tnv+GGVn4/0+I5UsvCg6szKR8ljaktpXNdTvnZGu/Ipy0FyJ0oXPLEh/
b3NuosxrFhx1qJ6FoFKj3GnK8VmaQ6JNLDyWExRca8NElkVOxtMfLDyh7VPa
T1n9iTtvcDcLPKbsXkfKJTzrGfv6WViUH1gSSPkAvaNUYJiaf5XJ/6IoNz1N
kf0+xsKr4DMdqZRdaEfPZ3FYsGtW3JxDedxWoMNvigV+/dWpRZSDnn/cTfxm
YfEFrZ1VlHlXRKSumGdhI6uAt55yvOOeuYZFbBwgkxe1U5YqWKDfX8LG9pze
LT2UH61689p7GRsvDzy8Mkh5OyNARGslGz+7WmRH/+Z9oxK4eA0bt19Ej4/9
zSsw+u2TEBuulwp//nWTW6Z6iggbI91Omn/vdyGdE5gSbCw/Evry73istf9w
VKTZqJkR8P/7fae9Wkz+yLGROMTn/zcPb+m13MqNbOjPMQr+P6+o6apERTau
jq3Rrf6b15fP234rG2XrudcU/81bXvFhsxobGcIbNj+lrCF5YfOUBhslQp4x
dym/Pbk74q02Gyn8RYj9m7d6pj96Nxu07dxE8N+80i8MLPXYCNwvf9X1b95A
3zQ5Aza6BGnbTf/m/ai4eNyIjWjXK1u0KAfL9zsVHmRDpjQp+B/KtNP33140
ZcO3erH84r/5NomelbBiw6ot4EIltR4enalv77dhY+tjZWRS1vgWuyvfgY03
0zn0S5QPhvL+NnJj446yZYEO5eC2Cb/AQDb4c5fpJlPrddbb23bRaTY+3BPd
40M5aKFvb9QZNpqskgb1KQfKtgjfuciGo0mSzCC1X064lRSUJ7Dx6vkpbznK
rBmteyZJbNxI+PR4jNp/PlH5ES032RDy700qoOyVk04fu8dGVnrrGUPKrpPR
c2ufsrEy9VyOJbW/+y7y9t7JZ6PilNt5Ucou6859VHjFxomiJSubqXrgpH3y
tk4xG31Kb82OULY5Z0UwatgokLletpOqH4f5NoQ9H2Ajyl6a/omqR19S73jt
HqHWl9i4RTBlk62i5pXj1PzGWstsonyQeqBtio38AlH5YFMmDG9wKniWcMC6
ob1YmKp/OvLkCjMZDpbqeesLHGSi6MWOyTZ5DiT7x3KyqfqqvS+vjbmJg2sV
ObN7Ke/wSHsStJWDOMt0HX+qHqs+jTK+r0PdX+AQVm5E1cddlglsKw5OBkVI
bzdgIvJMoXSlLQc+J4dWPafq/XCJRM5tRw6EL719q0I5Z29n5b/uHDzyPhuk
sIfaz8Ye82mnOFjZd89+OXVe6DoFu9OTOFixqVY5QYeq1+F3UVrPQZ6hlkE1
dX4VVXN/TG7iwCJ/r6s8ZcmVDLpvGwe+nczAEOq867iq4C/Zw0GY4Hd3JRUm
mCl5jwInOAgv5C8MUabmN6dsrZLABIRka4THNzERVT8wnGg8gdQLxIyQJPW8
6TKezWYT2EdUn7GRoPJ9UhAjLSYgfnZG4wF1Xn+v8jActJ1AnfoXPWUxJraR
Iw91vCawk5/Vob2Oifoslm1f+ASm7/j+Ul5D5Tv765Pmuwm8Tv/PL3wxE7kK
S5+3qE+ioKF+6Raqf+k7usa3aMckvCsVAtSp/kbqkpjS7V2TVB8ZsGVnPwPR
XUoPHfdMQqkxJMSglwGPFNPEAbNJxGZnvDnSycCGlSl+UycmMb7qta9JMwO3
WFu2CzybxJmslqvVlQxEvjJ7abTlJ4TTE+J+pjFwSnHlW1WZKUj0RF38SPWX
G2zMdxYvnkbGj/E4+zUMRL2vGj8xO40If5d/cotc8Gy4RrC68xcC1swdl/R0
wdC0DpFSOoPCH3wPC6n+vGVXa/q1gt94b6TtkFnijMjdtBDV1Fks7Ox/yfR2
BueU/ZVfiXPI28bgjxJ0hlfy+vQd4X+gWfK8RrLICRkBQcrinvP4mXl+d6yn
E5KjZ1kbHBfg5Rj+JHStE9JzL171kOMiavIV2xPKHbE0uixnPoGLWDux8kdq
kCPKw0TdN65aRFjZGpl/V3BET+t2a5lzi4iaZH0xhQ4H2Bm7DeXOLiLuuf66
IBjvgB0yTs9W+3ATfC1+kj37HSDeFx+s1MFNnE7za39N/T+kVzT3tNN5CCGJ
vt+qIfaY4R0Ic/jIQyzqMopkzdhh0onvXaDRYqLx3UYXMx87/HrmynOgdDEx
ZfOtvWnIFjb2kcFs9SXEjMRtA+8TtpBQKI1XfLqEKN5lPK81YYNdpqUdGnK8
RFXI6YdxZ23A9PqtupDASzBmd8xwrbHB8IN9sjaraITZg3wF2VvW+KJlYxR5
jkYo/mhr6lGxpvqJddLhoTQiiu/ORf5t1nip+3XqYhiNcOGlue5StsZNo/0P
z4fTCKLlSUXiZms4We1YOBVHI/oTUhf2yVlj8pTQC9e7NKJ4RntPgZA1RApq
pPeW0Ijbjv9wyGk6lu8Kn9Z7RyMmP1du4PykY47UryXKaIRB4p5Y+Uk6OisK
T++qpBFS7KTZCBYdjxozG9Q+04hNAlPE0UE6dk2HRct20Aj/61WnZlvoUD5N
OEt30Yhdd0P6tzXTIb0wqyXVQyMKd92MYDbSsYR2sl90gEboVXBc677SUSvs
qLeGRSMCddyjs2voKLkpIbqaQyNio7OudVfTkSfVNM43SSO2vZOsE6uiI2mD
cerSXzQi2etyT8R7OiIfLffj/U0jTOt9Ct+W0hGsXL5/8RyNuPnpeOnMWzqO
5Z2X4Z6nxsu+tKBSQoeDhs6vhQUaESSYecyjmI7/A6Nv8Lc=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
vvVWvNlZCsZKUig5Gk2F/wG4uqgv
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"premium rel err\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.02`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6737350749045362`*^9, {3.673735172942709*^9, 3.673735238219043*^9}, {
   3.673736591379451*^9, 3.6737366454922132`*^9}, 3.673736687874827*^9, {
   3.6737367264719276`*^9, 3.67373676274842*^9}, {3.673741983768905*^9, 
   3.673742008989306*^9}, {3.673742046252355*^9, 3.673742076869539*^9}, 
   3.6737518524197073`*^9, 3.6737523420918107`*^9, 3.6737527391246543`*^9, 
   3.6737532138158073`*^9, 3.673833753739953*^9, 3.673833795794316*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "nn", ",", "f"}], "]"}], "-", "\[Sigma]S"}], 
      "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "nn", ",", 
         RowBox[{"1.2", "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "nn", ",", 
         RowBox[{"0.8", "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\[Sigma] rel err\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.03"}], ",", "0.015"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{"0.03", ",", "0.02"}], "}"}], "]"}], ",", "Dashed"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6737411681968126`*^9, 3.6737412897088523`*^9}, {
   3.673741375679921*^9, 3.673741376196063*^9}, {3.6737417026928782`*^9, 
   3.6737417062629156`*^9}, 3.673752127109142*^9, {3.6737523518721905`*^9, 
   3.6737523532587795`*^9}, {3.673752824167962*^9, 3.6737528694076576`*^9}, {
   3.673833884792286*^9, 3.6738339237697144`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Gwj4Hyxulkg=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Dashing[{0.03, 0.02}]], 
       LineBox[CompressedData["
1:eJwVj3s0lHkYx8f1VZvLbhFxaoaijksoLaWeH9UJ64RxVG65ReM+LpmxqJdG
ZuZlXbcWWztbEu05zCiXk/JOuXUZVopq5DQuiax1D5HZ2T+e85zPec73c74P
LTSeHq5MoVC8FfP/9pzOfOnj0w46rVYbLB7hpLHnC6+/E9rB+uXZbY3VOLkg
3NLr8ks7CE4M3qdfxcnSxDu9hzrbAYUtajTH4+TwouQVzaEDKMIaqbsJTl5Y
29o/ZdQJYvuEisZtl8iyDTXS7NGnQK1h9A6+TSdHTKQj9UkSwJ3ybexusUnJ
d5FESZEEBKusG344m2yYX7JNEklAZrDPuCyQTXJbdbOspxV88ubbCH02aRHm
Rf0rqguCJTylffksMuXm0wBBSDeIfXQusTJTyOyCgah2sx7Aj4TpdbGSSX3t
5yO1ur0gEEbppt5mkkg+VKwl7AMKY9n6TeE58l6OKNzH/h3gf+aJ9KK9SZV5
G6qT5iBQZJTa1LzNcLcqxd3fUwZ41AK9254Ozs8sMhhoGCj9ZVlDP4WAvL6l
JdJsFFCTSlrQBQYcNor7UDv1EVBC/eMXqXHwef5Csov0EwS7ucdWWyeC/vHy
8V2VE0C1qVq7LkqG6NDfY5cYkyCbO+RmPZsClrOLEYb0KRCct/2h3zIVmCsx
wNk2DTjusHbQIA0KHbZ3/MGZAcT3y+apZkD6+/lkFmsW8PIt6o2PL8JuxzPF
s75zoNPsfbqKhgPxenyyxGMexPOzXZ6jONTu0bgv3b8ATK3QmY68TOA3eje4
Wi5CgUFNWphDFrDNNR/b0r6AgB+kPdSfBaYBPodaVJeg57epteHgy0C0P5tO
XF0CqrRvU/XUZRBNSjY/H1oGgUhtPT2SA5+XDqPy1hUQ7wxZPv2eA1LHgcpf
m74C89RwuR09G/hHsAzb66uAis74BD3Ihjl2UN5yyRogg5hWxq4rEFO6q9Ke
+w10EI2lyrsCd1J+tjKMXgfZv95z4UNXoDR3dcY0RA4yzW8l1Y45UFmbXRhl
QkEoZG+kNC8HNHLbataLKchTnBI49y4HOjgGkWZaSghvzLMc2M2F0QE7fxqu
hJgVOTuOxXPhrAfjc+2qEkJXP7p6NXHBnhYq0o5XRoKBJPPbK1wwHCtKt5Ap
I3HgygfTH3ng1/ludNBPBQnKMYENiwcr6uOc4C4VZC1IaCkV8mAhdNMTlqsq
6omdKQv9hwfLovMq7q2qiGk2VtS2kw8BQfz02f1qCA984RB1mg9Ge1qLzIVq
iHIqcYSeywdHr1bZARN1ZO3WYz7dzIeImK+28mJ1FHzPbkJtgg+Tt04YB2hh
yHql6JOTPgEvHQJc+TiGqG2JPa+dCWh7tJXKzcJQsInNw/yjBDQ4vfqSzcGQ
uO9irtsxAspc3SoyuRiSBcik5HECQn3t5ewCDDFvndtb7ULAAntL/XmBwj8m
fJhykgD9Jgn1uBhDOmOLhd98CdjoyF1yfqLwcfca1vsRsEYe7UZtivzBBl6M
PwFDnQ/SHJ8q7ownegMBBNx9U9W/r0fRz4492xBEgOMSJ9dYpvDVMWoiwwmw
SkNh1GEMCTLN83dEEECVrzpsH8UQqrvm06dgNSzpk8G4om/+5WLEIKBbL8T5
+xkMefq7vNaNJkBcZmSgPaf4t/vL8HMF121/O71pQeHzTX9zKYaAa6Ye1zWW
FXlNk8SJWAL4dzcmq3/FkPCah/6NOALSrTrcVNcU/WSRFfR4AuLqMmnK6xgq
YLH0MCYBwQcOL8vlGKJMZ8Q1K/g/+aZ5Lg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1:eJwVkHswlXkYx1/XVzaXnUI6Z8yLUWxlZNuWE74/dm20GkeN3S7isOlCK5Xb
FHXUwXFelRxlQ9OZNmrsxpFY6Sb3pJK2tpCQsNniuB23nH3745lnPjPP832+
38c6bP+mcG2KojZy9bkLh5OfBgbWg9rwJlLwnQA2wocBTw5wPGcuMronwLhy
cZvPKY4vf7IrFKzD+YNX2tY1cmzf7uSx2g29Ey3PrF0bQBUliLL4Hoids3jx
gd8ISpk6+1hNkLuguD2lrwlU5O0q+ZPv8da2/W35oRZQdfMOlc1+WGLS/LbE
rA3i+rlbjnM/g2h65MbK5xCXDiqf9YtQllYaHujyCuJWTDzvCofO2GrG0+g1
qNMBvJuukSi6Gue3XdgNkj3wJ7UgGl4PVibtIb2c37Pe0bKD0JTfvbt3eR+Y
m/e6Jjpj4M6PelPy4R2Y7KeZmv44vB+LjfFpHwBx9JfYziRgiXfeoF3hv2CU
p1JSmw8jMiz/V/WeIVQfFfQPxyZilWpiF2/TBygagiuk9kcRPb0PkqXDEFnk
rL94+RjOuFo1XJSMfM6TnywXI7FzLCY+XoURnlODi3cy7N22yFVbR5G5SC/f
picZ7N+DQ9n+YzAt7o/YIT6OEgeDG+1rxsH84WUVtfAEZH9trvBdNQHTaZOo
/LwTSFhhdN/ZehKt/9X4rGAkWBYUuO6urhqKa8w5l7MSsPUPhg/OqiHaaciL
M0pB6VDLouaeKXTXORgPxafgvdqd5NVOQ+F5ukzQkYJ2t47Cs5UzELeHqso8
UyHzoJOcL8xy/6zZVpWfitGEkJNT2XOgJir8K2ZSse+8XaGL9BNMg5kI+aY0
XIk77MiLnIfQ5qp7hyIN5zNmR5aFakBpejuo0TQUlqScibClCJVTZBkrkMIg
o654Xk4Rp48ftc4dlaJBYrl3ubEWoQpa+XH1UvR1fLPdWqxFhPrnzN7ppiPY
f8/7klktonQo6nj3QzpcrMNKTfZrE2b7T0Vmx9PB689KXNmtTVrDLzWP3kzH
tsZXfa+36RBlN1PjOZ6Oaf1BieiRDmFSY6IL7GUYD1tYE++rS0SCnJebQ2SY
Kt2t41erS4gqqUBbLkNQiCxRtUaPMModwrT7MvAdarNWKPVIdMZX174dlcEt
oLZ7ra0+EWptlPOtWOzaN+OskesTimgCqtezGPp9vU2QMU0yrXymDxxi8dQ1
yFcmpom4cgB9uSzq7lgw0uM0MfVpyTqTx6LC89lkioQmysFdjzzyWeT6bric
LKUJY9E2/dsFFmFbXTQJmTSpfmjs5KdgMZ6wuHy3gtMPSzMvLmCxpLKF8a6m
SbTdzo8hShaGblK1Vw2nd+y2p2Epi7l73z0mdTTpdohIusFxT2PVEbcmbp/3
6ppBGYuif66++LqVu9d7cqyknIWbWpJh000T0dJs85kqFo5HyC9ML00UqnTV
pVssGM2sq1UfTZy6bMp/vM1Cjz40YDlIk5Eu4WT+HRaPzUO9vhzh7k/ahnpU
s6jO5VuajHLzzpXJ/Rxft3o5vHCc03tjxp66zyJnmf8FgynO3xdkS1cNC1mR
YYz+DDfvZ85PrWWR6NiwQXeOy9fZ1LSqjkXU9WRr7fnP+YKCn3MsWus+pdFw
/6RfdCbWs/gf0LBFQA==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Sigma] rel err\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.02`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6737528774180584`*^9, 3.6737532266563435`*^9, {3.6738339175401397`*^9, 
   3.6738339298890467`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functional n", "Subsection",
 CellChangeTimes->{{3.6737534540931687`*^9, 3.6737534593106947`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nfunc", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["resATM", 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]], ",", 
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["resATM", 
           RowBox[{"[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]], "+", 
          SubscriptBox["resOTM", 
           RowBox[{"[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]]}], ")"}]}]}], "}"}], 
     "\[Transpose]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673754034384546*^9, 3.6737540530249944`*^9}, {
  3.673754485513299*^9, 3.6737544992759676`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", "f"}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", "f"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", 
        RowBox[{"1.2", "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", 
        RowBox[{"1.2", "f"}]}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", 
        RowBox[{"0.8", "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", 
        RowBox[{"0.8", "f"}]}], "]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<premium rel err\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.005"}], ",", "0.02"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{"0.03", ",", "0.02"}], "}"}], "]"}], ",", "Dashed"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673735023103979*^9, 3.673735065928793*^9}, {
   3.673735156998191*^9, 3.6737352315555964`*^9}, {3.673736600222391*^9, 
   3.673736639314528*^9}, {3.6737366714057083`*^9, 3.673736756119498*^9}, {
   3.6737420001361694`*^9, 3.673742002484271*^9}, {3.673742039329338*^9, 
   3.6737420707845697`*^9}, 3.6737518432594795`*^9, {3.6737523300050054`*^9, 
   3.673752335060376*^9}, {3.6737526578791895`*^9, 3.673752719150693*^9}, {
   3.6737539354433045`*^9, 3.673753953573886*^9}, {3.673834032069954*^9, 
   3.67383406811678*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
i7nzhg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Dashing[{0.03, 0.02}]], 
       LineBox[CompressedData["
1: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
t85eNephUjx0DH+y2SRiIlw4WO0bk/I/1X3acA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"premium rel err\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.02`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.673754006596418*^9, 3.673754097261242*^9, 3.673754318785267*^9, 
   3.673754516012022*^9, {3.6738340767626686`*^9, 3.673834096573003*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", 
         RowBox[{"nfunc", "[", "x", "]"}], ",", "f"}], "]"}], "-", 
       "\[Sigma]S"}], "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", 
         RowBox[{"nfunc", "[", "x", "]"}], ",", 
         RowBox[{"1.2", "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", 
         RowBox[{"nfunc", "[", "x", "]"}], ",", 
         RowBox[{"0.8", "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\[Sigma] rel err\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.01"}], ",", "0.02"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{"0.03", ",", "0.02"}], "}"}], "]"}], ",", "Dashed"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6737411681968126`*^9, 3.6737412897088523`*^9}, {
   3.673741375679921*^9, 3.673741376196063*^9}, {3.6737417026928782`*^9, 
   3.6737417062629156`*^9}, 3.673752127109142*^9, {3.6737523518721905`*^9, 
   3.6737523532587795`*^9}, {3.673752824167962*^9, 3.6737528694076576`*^9}, {
   3.673754543906227*^9, 3.6737545540397825`*^9}, {3.6738341213423023`*^9, 
   3.673834140374397*^9}, {3.673834490878409*^9, 3.6738344953509483`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
5N2aU4pA1TVa2tjAJrXpC0wowv8BdIodKQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Dashing[{0.03, 0.02}]], 
       LineBox[CompressedData["
1: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
r4c=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
wP8BaguZpg==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Sigma] rel err\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.02`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6737545646497717`*^9, 3.673834152493927*^9, 
  3.673834505650921*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"nfunc", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673754717971363*^9, 3.67375472569285*^9}, {
  3.673834182909071*^9, 3.6738342320865445`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({0.00006128571428571428`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.6737547260932817`*^9, {3.6738341791581907`*^9, 3.673834232786866*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
oxg=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"n\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 13.100000000000001`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Directive[Medium],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 3}, {13.150420027155509`, 14.33665378632759}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6737547261245313`*^9, {3.6738341791581907`*^9, 3.673834232808997*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fixed Reduced Delta", "Section",
 CellChangeTimes->{{3.673821716035712*^9, 3.6738217213742976`*^9}}],

Cell[CellGroupData[{

Cell["Exact n", "Subsubsection",
 CellChangeTimes->{{3.673753136858305*^9, 3.6737531389525075`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"resATM", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"it", " ", 
        RowBox[{"30", "/", "365.25"}]}], ",", 
       SubscriptBox[
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diff", "[", 
            RowBox[{
             RowBox[{"it", " ", 
              RowBox[{"30", "/", "365.25"}]}], ",", "x", ",", "f"}], "]"}], 
           "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", "1", ",", "36"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673734534063858*^9, 3.6737346106940417`*^9}, {
  3.6737525527660403`*^9, 3.673752553144553*^9}, {3.673753011742202*^9, 
  3.673753031165372*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d0", "=", 
  FractionBox[
   RowBox[{"Log", "[", 
    RowBox[{"1", "/", "1.2"}], "]"}], 
   SqrtBox[
    RowBox[{"6", " ", 
     RowBox[{"30", "/", "365.25"}]}]]]}]], "Input",
 CellChangeTimes->{{3.6738236628029103`*^9, 3.673823739029683*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.2597149084810158`"}]], "Output",
 CellChangeTimes->{
  3.6738236860954247`*^9, {3.673823726103241*^9, 3.673823739699185*^9}, 
   3.6738363208012333`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d1", "=", 
  FractionBox[
   RowBox[{"Log", "[", "1.2", "]"}], 
   SqrtBox[
    RowBox[{"6", " ", 
     RowBox[{"30", "/", "365.25"}]}]]]}]], "Input",
 CellChangeTimes->{{3.6738238459005265`*^9, 3.6738238542264595`*^9}}],

Cell[BoxData["0.2597149084810158`"], "Output",
 CellChangeTimes->{3.6738238549109573`*^9, 3.6738363228177195`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"resOTM", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"it", " ", 
        RowBox[{"30", "/", "365.25"}]}], ",", 
       SubscriptBox[
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diff", "[", 
            RowBox[{
             RowBox[{"it", " ", 
              RowBox[{"30", "/", "365.25"}]}], ",", "x", ",", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "d0"}], " ", 
                SqrtBox[
                 RowBox[{"it", " ", 
                  RowBox[{"30", "/", "365.25"}]}]]}]], "f"}]}], "]"}], 
           "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", "1", ",", "36"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673734534063858*^9, 3.6737346106940417`*^9}, {
  3.6737525527660403`*^9, 3.673752553144553*^9}, {3.673753011742202*^9, 
  3.673753012565666*^9}, {3.673823809626792*^9, 3.6738238310033436`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\\!\\(MachinePrecision\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.673836328461112*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"resITM", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"it", " ", 
        RowBox[{"30", "/", "365.25"}]}], ",", 
       SubscriptBox[
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diff", "[", 
            RowBox[{
             RowBox[{"it", " ", 
              RowBox[{"30", "/", "365.25"}]}], ",", "x", ",", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "d1"}], " ", 
                SqrtBox[
                 RowBox[{"it", " ", 
                  RowBox[{"30", "/", "365.25"}]}]]}]], "f"}]}], "]"}], 
           "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", "1", ",", "36"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673734534063858*^9, 3.6737346106940417`*^9}, {
  3.6737525427497272`*^9, 3.6737525432540674`*^9}, {3.673752999766861*^9, 
  3.6737530011526103`*^9}, {3.673823877948693*^9, 3.6738238826868925`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\\!\\(MachinePrecision\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.67383633443363*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\\!\\(MachinePrecision\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.673836334834689*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"resATM", ",", "resOTM", ",", "resITM"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"12", ",", "14.5"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "14.5"}], "}"}]}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{"0.03", ",", "0.02"}], "}"}], "]"}], ",", "Dashed"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673734624415484*^9, 3.67373463581135*^9}, {
  3.673736570468935*^9, 3.673736572703288*^9}, {3.6737516589293175`*^9, 
  3.6737516592609296`*^9}, {3.6737525709050064`*^9, 3.6737526081804457`*^9}, {
  3.6738307744611883`*^9, 3.6738307789622197`*^9}, {3.6738310902999735`*^9, 
  3.6738311032992725`*^9}, {3.6738316463023233`*^9, 3.6738316567765427`*^9}, {
  3.673831695913327*^9, 3.6738317657066813`*^9}, {3.673832219887678*^9, 
  3.6738322505396338`*^9}, {3.673832284972686*^9, 3.6738322856210747`*^9}, {
  3.673832331185317*^9, 3.673832396504833*^9}, {3.6738324738823905`*^9, 
  3.6738325013485765`*^9}, {3.6738326853076*^9, 3.6738327260682554`*^9}, {
  3.67383280960983*^9, 3.673832840001913*^9}, {3.6738331556371074`*^9, 
  3.673833169632131*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQPffg1vS+4K32DGCg4XCC9XD2Vbaj9unKD7apLtd0
WNOxRNGh67z9oS+XXhrnaUHlr9qvzHjKlvtUy8Hq+OZjXR637JdveHJC1Ewb
qv6+/Xn9jRMOFWg78C/12vcr9ZG947XfyRPnakP1P7WPvfh5KeNBbYfGNGvJ
Dcuf298JqNI7dVcbat4r+3VT22pXftV2+KyuU5L68o39xHWb1pzh1IGa/94+
frPndjZpHYdNJX3pvaIf7eMO3FT+oKkDte+TfUJOtuwvMx2HnKtsohnbPtu3
/fpbUeWkA7X/q/2j7Zy9m310HFTM6g85hX+zX9ZSUH4zVAfqnu/2T9aHHxSN
03G4N+17vuyPH/Z+nE4fO1N1oO77Zc/Z4ZwamKPjAJae8ds+8fS1dU1FOlD3
/rHf0ic5zaBCxyEg4sWpS5b/7Bt6Tt3NqoW5/7/9BI3Um3ZNOg4tMQZ7wnIZ
HLKdSx9ub4P5h9GB9dy2dfe7dBwe9rwROrKX0eGpgs6ifX0w/zE5cJqv+hc9
ScfBdu+KTEM+ZofMTh3xfVNh/mV22MCQXfJqho7DrLcpB+bFsTjMej7h89PZ
MP+zOsjtbby/ZZ6OwzdZRXGe9awOrRuPsEYvhIUHm4PFpA/Hby/WcQj2u5tb
+Z/NQavZSctqGSx82B1+r3p6v2KFjgMAEGMKVg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{0.03, 0.02}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQfYL1cPZVtq32Cq/NDu2r0HCA8I/aixlczrXR1nJY
07FE0aHrvP0+tcyX995qQeWv2gv9FVU0iNN2sDq++ViXxy177myrY73LtaHq
79svmfSS1f62tgP/Uq99v1If2cs5CZ6dxagD1f/UPtyu5by2vI5DY5q15Ibl
z+2jbP5dXmSmAzXvlf2MEn3tTZ46Dp/VdUpSX76xvylZ5lUZqQM1/719ipjs
371pOg6bSvrSe0U/2rMIqx3jKdKB2vfJ/mrXWe0z1ToOOVfZRDO2fbaftnHD
Vo8WmP1f7dmSFZbt6dZxUDGrP+QU/s3+evsnqdBJMPd8t+/bldZjOkPH4d60
7/myP37Yz5BJsa2aC3PfL/t12x5+t1yk4wCWnvHbPmmlkH/7Mph7/9jfmHKy
p3CVjkNAxItTlyz/2Qt8+JHEug7m/v/2cxSNi3w36ji0xBjsCctlcPhafnlD
0BaYfxgdlBb93yWzXcfhYc8boSN7GR2034UJbtoJ8x+Twxm9Ni+JPToOtntX
ZBryMTvwzr5qFbIP5l9mh8X/fwhnHdBxmPU25cC8OBYHq+brdbGHYP5ndYju
mrrB8IiOwzdZRXGe9awOM1/fqX55FBYebA4cs1Tj24/rOAT73c2t/M/mYJ43
dQLvSVj4sDskvH/DXndKxwEAU8gDKw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQfYL1cPZVtq329q/NDu2r0HCA8I/aixhczrXR1nJY
07FE0aHrvP07tcyX995qQeWv2r/5LapoEKftYHV887Euj1v2VtlWx3qXa0PV
37cvmPSS1f62tgP/Uq99v1If2fM7CZ6dxagD1f/UPsau5by2vI5DY5q15Ibl
z+0vWv+7vMhMB2reK/tZJframzx1HD6r65Skvnxjf0SyzKsyUgdq/nv7VjHZ
v3vTdBw2lfSl94p+tP8npHaMp0gHat8n+9bus9pnqnUccq6yiWZs+2yfs3HD
Vo8WmP1f7TuSFZbt6dZxUDGrP+QU/s3+YfsnqdBJMPd8t8/ZldZjOkPH4d60
7/myP37Yp8mk2FbNhbnvl73C9offLRfpOIClZ/y2P7dSyL99Gcy9f+w7p5zs
KVyl4xAQ8eLUJct/9l/e/0hiXQdz/3/7ewrGRb4bdRxaYgz2hOUyOKyouLwh
aAvMP4wOrov+75LZruPwsOeN0JG9jA4T34UJbtoJ8x+TQ4F+m5fEHh0H270r
Mg35mB0sZ1+1CtkH8y+zw42/P4SzDug4zHqbcmBeHIuDfNP1uthDMP+zOgR1
Td1geETH4ZusojjPelaHFa/vVL88CgsPNocdM1Xj24/rOAT73c2t/M/msD5/
6gTek7DwYXeY//4Ne90pHQcASDgHww==
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 14.5}, 
     PlotRange -> {{0., 2.9568788501026693`}, {12, 14.5}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 14.5},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"n\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Medium], Method -> {}, 
     PlotRange -> {{0., 2.9568788501026693`}, {12, 14.5}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.02`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.673734636706685*^9, {3.6737365667093134`*^9, 3.6737365731572046`*^9}, 
   3.673741965784775*^9, {3.6737516299967875`*^9, 3.673751659962138*^9}, {
   3.6737525844713774`*^9, 3.673752609519578*^9}, 3.6737530469091263`*^9, 
   3.673823893583008*^9, 3.673836358460182*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using long term n", "Subsubsection",
 CellChangeTimes->{{3.673753147869405*^9, 3.6737531527580013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "14.5", ",", "f"}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "14.5", ",", "f"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "14.5", ",", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "d0"}], " ", 
           SqrtBox["x"]}]], "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "14.5", ",", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "d0"}], " ", 
           SqrtBox["x"]}]], "f"}]}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "14.5", ",", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "d1"}], " ", 
           SqrtBox["x"]}]], "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "14.5", ",", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "d1"}], " ", 
           SqrtBox["x"]}]], "f"}]}], "]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<premium rel err\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673735023103979*^9, 3.673735065928793*^9}, {
   3.673735156998191*^9, 3.6737352315555964`*^9}, {3.673736600222391*^9, 
   3.673736639314528*^9}, {3.6737366714057083`*^9, 3.673736756119498*^9}, {
   3.6737420001361694`*^9, 3.673742002484271*^9}, {3.673742039329338*^9, 
   3.6737420707845697`*^9}, 3.6737518432594795`*^9, {3.6737523300050054`*^9, 
   3.673752335060376*^9}, {3.6737526578791895`*^9, 3.673752719150693*^9}, {
   3.6737527657305636`*^9, 3.6737527814148493`*^9}, {3.6738247692976446`*^9, 
   3.673824808039319*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVzHc81Ysfx3H7UJFKxjUyyigj0hD6fNU5OlRCkXFINJAoJJWKk1MyMwoh
EtI8qOQqPt2scOzMQ9kkJTvOKb9+f7wfr8fzn7eSq4/1CT4eHp7Mv/t/LSdC
mmxsKsBuvMvtekQ2KlvWWjWcq4C+4gep3X7ZOJMn0UyNroBMzj/RjrRsTPZ9
1GxYVQGdu8x8qrWysX+W1aJkUAnHuPtknJqz8DxXqu27XBWszow4v0E5C++J
vOhiDH6Efqj+7taViV6e8w5LPNXQYJy34kdlJu6qJdiB8tVAMu24f+dlJg5E
trBP21aDpvmFHUZRmagpvtBt9bEamKn+8n0mmVgqSf4i/6wGBGzk1BzyHuCA
StfAaz8WGI85/c7KyEDWco+IhDgWWEl6+cjFZGDh9LyeXz4LnDoG5JhXMjCs
bC198wQLlPZdtNjgmIGablaKTz3rIDemVe2gVAYGZH6kZRyrh+c6wa5t6unI
uM32rFBrhILnaqv7iTS8JPCwVH97I7jRLPf0qKShd6Dn6izTRpAQa1zkI6Wh
ncvCv/QTjeC8caGQVZeKGzdLiRAPG2GnhUGWpVMq1jdYPypWaILm/oSnbddT
UHplzQBzbTO8jJs70jeejB3e4c4y65thV9a8/va2ZEyuN++k6zXDRf2FE08w
Gf+Jrq23OdgMLTFvuSNxySgvWvcvJ6wZ7JYJPSjemYzKyxtj9nKbwepZ46aE
mCTUJLUZfulvgUkX99HP+xNx/OTdQupkC8ydUvrJMEjE55W2ugVLLWAhUllJ
Vk1E7Rvtqgy5T1Ar9sxUhCcRdQU7V22y/QS6N9I8H7+6i9v4u0cCqj9BtOgN
AVXlu0gs9cWL5bXCD0HujJzoHXQ11mDqlLYC/4PlI7XcBAy9fLbGktUKhRIV
KVHjCVg1/4cnfvSvmdFsKisBLX7KeksptYHEfnpWSmQCOvXZUBXj2uBujjzj
nngCXiqr5ur6t4Ok8IsG6oZ4TOVdJX2I3g6k1KQSOal4LAW7Lf632+GR3eld
PCLxyPtu2KPwWTtYSoTdnx2Pw7BX/O07h9rh0q9HHomv4/ButnH+HtsOkLCI
088yi8OXN/NP2OzohC8jZRHWQbHocitF4vHeTng6971hwDsWxSIYZVzbTniX
8OdU6LFYdI+2V8o63wkzGlHbp01jUf4Ob89UQSf4Dje1h66OxZuZVodva3WB
ZP3u/44/u42OJZO7a5XZsEF+71fh1hgURvakgh4bbHyQ/3lJDBa+r8jwNWFD
e39dkmdODIqXJ/+RcWFD/sqFdN3AGKyoMSl2T2PD6+IBrW9yMajTEasrJN0N
vs3aft89o5F/WlfRRLQHaskVNLJ0FAb1SsxFy/bAWL5Msa5gFM7Vzdd2a/TA
OsNbebpTkTiaW3Ih0LQH2EU/hD1YkVjvbNbAvNYDHE5aU0FIJCbVuFxVmOqB
OUGRiPsTEaiZGdPNafsMmjH7tIw6wvFJbsB+R8te2FFWelKtIww1QwxCZO16
Qd8j+XZTVRgy7bmv2Ud7oVgwsSjiTRi+WkZfR/PphVYR4zydxDAs8YqaokX3
QrbgLj79I2HYuDkryZnVC1tcPd7Kdd3EuaKmwWPUPjj+mKbxdewG7q7WvOJO
9IOJ2FRJuj4DZ8W30AWo/TB5N9x9Vo2BuXYGNzMO9sMm8T/2trIMFBulxHY4
90PSZqduAz4GdgkdzaZe6YcLWuETjMZQPEeOrVMv7och842r1XxCMQNn5b9u
GQBGQ8Ha7a+u49Lr0lIPtUGonfOmrXGkY5KfSTtdexAS+WjMSCs6btYtn0jZ
Oggs+7VuolQ6uj6rVqzfMwgJMsz69VvpWJn5ia7nMgiM9uHBJyvpGB0zZspJ
GoRAWnS6aGUIKnhINkQuG4J2pxdvOdtD0FjO+wvz+xD4oUGxiE4wphp+MHGd
HYK0+EKJy6rBuOggmSXxewhSq5x1p+WDsSi51P3iimGIN51ImF8RjHpSK6d2
bxoGnRU36Rlt11B9dZ5Am/swZNRddQywvoYSwlMa3IFhSN9uqh536CqOTZ/3
p3aNQL/nmdquwCDUuWU6dqFvBN69oQ08Ph2E/gpSLo9GR6D8VKYC3TkIf1OL
9gnNj0BaxaOeA+QgFL+/qFy+ZhQaLGcSrMSDcBv1WhMcGIXVvgof+J5cxpDU
MO3t70fhaosXfhq4hNKUlNENOV9B5O38+SSfi3jaNfXMvPs3oIoduK4zGoBa
k7MnZa2/g9CZmXXrY/3x7IIXhP4zAQvSL9/szffFWAOFyvTQn0Dv3JDOnDiL
Qd3T/hcuTIJL89P3mf3eqG5kFz9pPwWr4tzuEue8MOLT6LeEg9PwbtE085qs
JzI1hF916c/AZz9H1Rotdwx/c6jQTGsWptbJ33OwPomBm0T/01Oag4IndevV
Xx5HVZqNYanAPHyevnMs+IgbRlRUT/hy5kGz5t5+cQFXzP/GWlPT9wtEpF+a
9Q654Ni8MZFStgABOTsrVOqOYpcRO+dO0SJEMDV7hFudMHwX6YpeGgdkzKUD
uWo0nAo8GvUrgQuihrkn+q46oFfyhpwdYb/Ba8ki/jivPT4KuKQte/oPOMVb
e8oWH8HkSM5P1WNL8EBm4bGgny3mMBmxnio8xDYfprauvQ0KR5a/+BPPQ7Du
LYWW2x3GylAZDzUxXuLUylilB7aHcJC91VEp+K/1DBIHA6zR+aD7GJPDS0zZ
FtiY3LHCHUqu+St9+IjgKpvvvE2WKDscF6TZy0cMXa12npWzRIeqzsEeB37i
DTd3azLLAheERkNd6viJ6zPJ465RB3DGdcWHC2YCRFxvZ6SG2X78lX+Kf3+Z
AMFrpeXLVdiHtKPhQZP6gkSoUm6rs4w5ymmUxW3KEySYa9b9thAzQyOrst5t
KkLEwDcrjpsKFU96LeotxQsRy58etk4024vfHu5VpomRiNTl5i5kT1NsMqCZ
hQeTiIY7koKbsylYXiKlGEYnERp1MintDyhYaNIyxwglESqrZDnX7lPwnpl5
VkgYibgWJy3dkkhBV/sdS4G3SYQBdxnSwyk4Eyjx+lQGiYjaGnOLdJaC0kUs
Rcr7v/9rVGjZhhRcZhQ2v/sDicheblp0YgcFubinnignEYsN6W2qWynYV1V8
2egjidhE5bd/qk3BJ+25bVsaScTD8fEzJUoUNJoPjVTuJRF2g/kPBYUpqH2Z
cFPsJxFftTlCzQIUVFziGCgMkgj2ibfq6bwUFCT5jciMkoi9jPwcQw4Z6yWP
7V71k0Q4OQjcuPKDjO/vycmsnCIRe6wi2w5+I2OBQsfEipm/vvhyQHmUjImq
B9OEf5EI6RezerV9ZAx/ssxfaJFEDOmn+md8JmOQdqW5AJdEWC3/dS6ATUbv
ghAlvj8kYq16w8YDHWR02Wb8a2mJRAy+GL2/vpWM/wNX7iHT
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox["\"premium rel err\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6737350749045362`*^9, {3.673735172942709*^9, 3.673735238219043*^9}, {
   3.673736591379451*^9, 3.6737366454922132`*^9}, 3.673736687874827*^9, {
   3.6737367264719276`*^9, 3.67373676274842*^9}, {3.673741983768905*^9, 
   3.673742008989306*^9}, {3.673742046252355*^9, 3.673742076869539*^9}, 
   3.6737518524197073`*^9, 3.6737523420918107`*^9, 3.6737527391246543`*^9, 
   3.6737527951386776`*^9, 3.6738248247865267`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "14.5", ",", "f"}], "]"}], "-", "\[Sigma]S"}], 
      "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "14.5", ",", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "d0"}], " ", 
            SqrtBox["x"]}]], "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"],
      ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "14.5", ",", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "d1"}], " ", 
            SqrtBox["x"]}]], "f"}]}], "]"}], "-", "\[Sigma]S"}], 
      "\[Sigma]S"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\[Sigma] rel err\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6737411681968126`*^9, 3.6737412897088523`*^9}, {
   3.673741375679921*^9, 3.673741376196063*^9}, {3.6737417026928782`*^9, 
   3.6737417062629156`*^9}, 3.673752127109142*^9, {3.6737523518721905`*^9, 
   3.6737523532587795`*^9}, {3.673752824167962*^9, 3.6737528694076576`*^9}, {
   3.6737529115909433`*^9, 3.673752922018859*^9}, {3.6738248440647497`*^9, 
   3.6738248520729203`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
tRuH/wPdGLmL
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox["\"\[Sigma] rel err\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.673752929882059*^9, 3.673824860465824*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optimal n?", "Subsubsection",
 CellChangeTimes->{{3.673753177615955*^9, 3.673753183266223*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nn", "=", "13.9"}]], "Input",
 CellChangeTimes->{{3.6737521778290286`*^9, 3.673752183349081*^9}, {
  3.6737530910898623`*^9, 3.6737530917220383`*^9}}],

Cell[BoxData["13.9`"], "Output",
 CellChangeTimes->{3.673752184366627*^9, 3.673753092005966*^9, 
  3.673753190997059*^9, 3.6738249011978188`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "nn", ",", "f"}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "nn", ",", "f"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "nn", ",", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "d0"}], " ", 
           SqrtBox["x"]}]], "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "nn", ",", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "d0"}], " ", 
           SqrtBox["x"]}]], "f"}]}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "nn", ",", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "d1"}], " ", 
           SqrtBox["x"]}]], "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "nn", ",", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "d1"}], " ", 
           SqrtBox["x"]}]], "f"}]}], "]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<premium rel err\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673735023103979*^9, 3.673735065928793*^9}, {
   3.673735156998191*^9, 3.6737352315555964`*^9}, {3.673736600222391*^9, 
   3.673736639314528*^9}, {3.6737366714057083`*^9, 3.673736756119498*^9}, {
   3.6737420001361694`*^9, 3.673742002484271*^9}, {3.673742039329338*^9, 
   3.6737420707845697`*^9}, 3.6737518432594795`*^9, {3.6737523300050054`*^9, 
   3.673752335060376*^9}, {3.6737526578791895`*^9, 3.673752719150693*^9}, {
   3.6738249191534767`*^9, 3.673824931715773*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
atY54+A/RheV2A==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13c8ld8fAHCjXO1ESkbWV/nREMoon4sSkpmtrIxr3yeVSpLIJlFIRkiS
jBJSeZTMbLLJJvPe51oZ+Z3+uq/36z7POZ9zzuecz3mEbNz17ViYmJg8mJmY
/v3qzt1vNjSsgAR1foatWTwurPtDr5FaAVdcK1xiJeLx+TyuFvWICih85yUr
vB6Hx2OvWhSrKuCk9uEXCi/i8KGFulYh+UoQFQuvtZ6Jxa+v7Wuf4auC5wKl
vWMxT/FnW3K6A0aqoWl6dfNevhjcxWnJbIOpBqqNmxs7FqNxpR/kHi/+Gqgd
Ki7qbY7Gh8Nae5yNauC70HBGVlA0Lrn7T69edQ1sV9X7cP7PY7yU++wv/uxa
sDx15fnusSh8WKR7+MO1Orj1H/vhwbZIvG4bJTTmcR3gzzu06NGReCFj6cS1
/Dpw4LR+5GUQiQeV7/U7PlcHz7gbtSdaI3BJWz3BN071oCehQz7eHY7fSK22
SLFugNChL3qBq6F4wKMep4pDTZCUTo9eDwnCb29KK5U51QTqa9/eHDQOwt28
nPakqzVB72yRy3ORINzE6s9HP7smiPCdmk79Eoj/7/i+LeS0JhDzLrdtXHiI
NzTqvyoRaAazvCo29hsB+P5dtcO5e1sgbzQz0zLfD+90C7nCI9oCbzREJDVC
/PD4Bs0uvxMt4Bdm/tnd1g8/EPGjwVCnBe7kblHAuP1w/h31H1eDWkD5srYt
+d59XHhbU+T5tRYotoqwTDX3xSVJ7Yq/hlrhRUCmpuMtb3za/mmhOr0Vmpxk
hcblvPG3lUZS7zZawTuJfaVy+Q5+9GGHWABfG0jWi61n3LqDS23u4pAwaoPu
tCfpP+/dxk+y9o7fqGkD/7qV3xaJXjh5YzB6Z95P6KY4bmnbfx23OSOee6z0
J0g849fXGPHE/e941OrW/YR8Fi7PLXmeeNXSX6boiZ8QeSDvoqO6J65N43Xb
J9QOj7YQrY+9r+GXBw3VBR+3Q+fq3JETBBW/XV6zJuXZAWmJ4W9ZDrrhz5k5
9hv4dUCtqsiBgUpXvBRMpD0fdcD38G71U+6uOPPnMUphdge0h7n36nx1wYMK
WDsURjtAhPb4M5ezM/705Zl8VaNOmLzYu1ujzRF/H5hvZyjXBZbBTe6+y7a4
VXAC1+vzXWDtPbs8/coW3xkaUL5m1AUyLzmmG4xtcccIU6H0610QcsB2da7Y
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
vG2D/S6XPAWsTp5Z3tggkT21cf2UUxT4P4AdfUQ=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
tWaTs7M0Yj7ffo5UEB3/AUccVJI=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox["\"premium rel err\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6737350749045362`*^9, {3.673735172942709*^9, 3.673735238219043*^9}, {
   3.673736591379451*^9, 3.6737366454922132`*^9}, 3.673736687874827*^9, {
   3.6737367264719276`*^9, 3.67373676274842*^9}, {3.673741983768905*^9, 
   3.673742008989306*^9}, {3.673742046252355*^9, 3.673742076869539*^9}, 
   3.6737518524197073`*^9, 3.6737523420918107`*^9, 3.6737527391246543`*^9, 
   3.6737532138158073`*^9, 3.6738249559886894`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "nn", ",", "f"}], "]"}], "-", "\[Sigma]S"}], 
      "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "nn", ",", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "d0"}], " ", 
            SqrtBox["x"]}]], "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"],
      ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "nn", ",", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "d1"}], " ", 
            SqrtBox["x"]}]], "f"}]}], "]"}], "-", "\[Sigma]S"}], 
      "\[Sigma]S"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\[Sigma] rel err\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6737411681968126`*^9, 3.6737412897088523`*^9}, {
   3.673741375679921*^9, 3.673741376196063*^9}, {3.6737417026928782`*^9, 
   3.6737417062629156`*^9}, 3.673752127109142*^9, {3.6737523518721905`*^9, 
   3.6737523532587795`*^9}, {3.673752824167962*^9, 3.6737528694076576`*^9}, {
   3.6738249769646363`*^9, 3.6738249833510113`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Gwj4Hyxulkg=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zBMGywIBGeMbuPk/Ifw/mbcK7Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
f9dowYFpbDEvFhPewC/sHsH/B+BoCJU=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox["\"\[Sigma] rel err\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6737528774180584`*^9, 3.6737532266563435`*^9, 
  3.6738249927497263`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functional n", "Subsubsection",
 CellChangeTimes->{{3.6737534540931687`*^9, 3.6737534593106947`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nfunc", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["resATM", 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]], ",", 
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["resATM", 
           RowBox[{"[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]], "+", 
          SubscriptBox["resOTM", 
           RowBox[{"[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]]}], ")"}]}]}], "}"}], 
     "\[Transpose]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673754034384546*^9, 3.6737540530249944`*^9}, {
  3.673754485513299*^9, 3.6737544992759676`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", "f"}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", "f"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "d0"}], " ", 
           SqrtBox["x"]}]], "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "d0"}], " ", 
           SqrtBox["x"]}]], "f"}]}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "d1"}], " ", 
           SqrtBox["x"]}]], "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "d1"}], " ", 
           SqrtBox["x"]}]], "f"}]}], "]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<premium rel err\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.002"}], ",", "0.004"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{"0.03", ",", "0.02"}], "}"}], "]"}], ",", "Dashed"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673735023103979*^9, 3.673735065928793*^9}, {
   3.673735156998191*^9, 3.6737352315555964`*^9}, {3.673736600222391*^9, 
   3.673736639314528*^9}, {3.6737366714057083`*^9, 3.673736756119498*^9}, {
   3.6737420001361694`*^9, 3.673742002484271*^9}, {3.673742039329338*^9, 
   3.6737420707845697`*^9}, 3.6737518432594795`*^9, {3.6737523300050054`*^9, 
   3.673752335060376*^9}, {3.6737526578791895`*^9, 3.673752719150693*^9}, {
   3.6737539354433045`*^9, 3.673753953573886*^9}, {3.6738250222932167`*^9, 
   3.673825043100954*^9}, {3.673836751856106*^9, 3.673836761079508*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVkWk4lW0XhoV6mhRlmwmhgYgkROtJFJpE2IaNRyk0vpJEveYSRW/o/Uif
SqlIhkKpLBn2YNhmQjImQyLzFN/+ftzHOq4f973u6zwVXC9YuvHz8fG94p3/
T4vhoBpr61JYOHAm98AtChUtyo9V/VUKj3/FpD6PpnA8U7TWNKoUXk0UzLyM
o5Ap4mRZlFoKSYO2s4cfUBjv9bx2N6sUrBRpYjGPKDxbN2KZ0827P3SW4/uM
wj3a+nXqfEyoLRROXnhJoXBciNULGSZI3PTcp/Sawq6JijoFPSaoeMg59mdR
+NZG7PgDaybUbIrOOJxD4c0853pRLyaYhZ4SPvaOQnuJl8ejophgVChPjeVT
qHZ1tJ5IY8LRuoQY7U8ULjTvtg5iMaHk0NMXokhhtX5Yw2w3E1ZHxWTEFFL4
5AHX2puPBdpWbaVZnym8PC/eOCTDgryVGWIXiig0ZVA2p/VY0B8T2VLOy1IF
qY0d1izIxgEbNi//lBu3sfdiwedHrW0nebkgwLCpLooF98dfVD7mvXe344bt
4TQW7DwUeDeAt+/E3uomJosFx89JJy4UUKjzRJJO9rBgY8GZvzbw/rtc4MSX
93xsKMgxTezi9Wk58Yq+Q5YNLZNyb0x5fV+VTHx5pccGIjbZxpLH429lsFOx
YYP94ZuafNkUHrsR3pzkxYZmi23TljyeSj9q7CSj2bBqxNX9YCqFkwekW+6l
scE8V9JsgOcjYcXrlrAeNgQfGU6WS+T58pyyX+TjQI+zWVPOfZ6vcrLVV5YD
ZKz00ORdCrtv17WeseGAqNxkhF8ohblDMo7fvTgw4bp/FV6nMPzIqa9O0Rx4
/VjVKcuH50N45usxNgfiNW7nJ5/m+bhoxCjv4YBh9+bxZ848HzWRbcZLyiBu
cKeLvS2Pf4zct136ZVC1X/LyNxMeTzHjdtlXZRDbWux4eQOP55U7zv+yyyBl
iTV7K41C1y+N7cLfy2Bvd5JR4koKiQSPDgG5clgRsOLNu3EXtJCN7uyPLgfr
c0ppf0pdsHtjS3fOpQpISd/qMclwwYpVHpGx9yoAz/c++3HEBXPHprQuZVWA
pn723qfgguHFtODtwxVgyC0LvCnvgmonjsmneVaC/CbVSMdCZ6Qd7GDdulUJ
ItIpwm5JzrigdeGC+4tK2FIU+1zpb2es4b9ToNxbCbMn0x436zujzxO24yOK
C/7aclPRWU7oHGErGBDIhcs/bq1jRjmhqVdvGiOJCwxnj+76M04obSQ4J9XG
hav5Gz7fUXZCwa0xT2bmuBAi9J8TJL8T/hJRNP8iVQVd1Mner98YWNgJ8XH0
KlAnohp7/mXgSw6X9L5SBYtE+i+6NwPvZTH6LO9XwbbEqfR/7Bl4Lf5ntGZO
FVzS7ZuePMpAtyD/XcL1VSCx9yXbxISBRzxWtv8arQL5g9N3ruszMPHFoeLe
5dXw4Whu0UMNBobdbfUs3VQNjQKBUXGSDPQTTC7Q3lUNQ0E7TM6uYeB5X891
T/dXQ90O49QtAgyku8y8D3arhp4OPinbn464dbv4CjK5GgaCDQK8Pzkit8ry
eb5cDazvMcC79o4osbasO4NWC+2vxcJtAx3wy/kIJ0mlWqhM73HjejlgPNe8
OVirFrpLJBW2uzmgVFQ51/poLfh+yHPKMXNAWaHK93PhtXCuZKa9SsQBFVdV
Rx+YrwWN6hGBuP/aoxrRuLu9qw4yBJOl7NPt8Oep+7mmv+tg81DezV8P7TCd
aaOZvVgHCY/Tmf5Rdqh+o0klTKYezuU1jwVfsEPNpc0iqjb18DHHt99K0w5H
T8bfjj1ZD+HrS94XKNhhdokdseBVD3J6EyMq6+xQO7Rlvjq6HnQ/3Zn4PUpH
HYGvP3w49UAllO4JeUvHSddE146merDw2KM88JSOeUWObWa99ZA22W1hFUdH
X0VZ+pvxevBT6KEwjI66wW21MgINMEwcnVH3oeNM58PDN0QaIOR00qSUJx3z
9zqxhzc0QN6qX/81dKbj7iXtn4oMGmCB0roVZkbHeZckXbWDDbA6o/1q6h46
fix0fhNn1wCVTiLtVTvouCew44W7TwPoKgn5SsvRkVzsjFmT2QCi3cYO2aO2
6Gq4JUOjoAFsuJ3fhPpsMdT/YplFRQOY20/1u7fZImtqgS+mrwF8PepIWbYt
HhmRPi+u0AjXN0b1Xntoi4xOa1P5e42QkCa1YrWpLfoVc+Y1vZvA8YbHkwOJ
NvjmZpabtW4zNP6YX3J8nzUKjGnK7xVqA+Mqhb/oaImpL3wOOVh0wOKHhs+Z
nyzQiKN23Z3sgmFR5wn7qsO4mFNQ4LGpB1Y0r+7yKTJHQ5nz7RlD36HqukRj
rrkpDoxd9jZt+QEvz9fMBk+boITJgz7llH4Ir16W7iJujGdcE89NuQ/CkbTm
rpArRrjt98QpacshOCFxRTCgn8SLM2chVGoYQsa0tnOMAP/Rk2MmhY6Aon2m
l2G5AV77OuZ95cpvuJP51Xc+WR83G9BjftuNQsvagTm+Jl2MrO8bjD06BkkZ
AypI24UZW5a/bdEeh/1jl5PdH+zEiDyrXLNtExDgFaARtVkbfVWFPmspTAKn
oMqf3q6FKo7WuwsEp0BeOEIolqWJkaWcYa+5KRBnvdt2K3s7Zg1WrC/rnAb1
TYR1SaQGDkwZkg+KZ6B7/abBtx3bsMWgNSXu3Sysfu9/XEdHDSP2ENe1Hs6B
y5Z3cgdYW3HU1/nOdOw8BIXs01Wib8Gz8copuuF/wKvn4tfTqzbjcx8/dekz
C2Am3inhOqiC8bfnRlSoRcg3PmOszFHGlIywfzw38pE1aupBopVKuPx2yeuF
GD7Sa2UoXah3IzJDJT02rVlCStb4XW2YU8Se1p0OCoFLyAZVCv00FNHpqPtA
xtwSUukm/+pVLgqoq+CatfYCP6mW+exjYKo8Svfeu6bWwU/SGxViCAF5tGc1
97TZC5B/bzTsccqUw5llfaEulQLk9BrJ4zqhsjjuurroipkgmTkz/Yd7TAan
s04LHCoWJJeV3/6epCONjs4R135rLyX/fPiTs9RQCmW2FN9TzVxKXu02c5E2
lESDY8UdOhuXkboj6mLCDhJ46uys1mLMMpL6QLilh4vjYPIBRcc1BOmYdDxS
PlMMa/QczSICCTL8NGOf1QgNSz6Jy4cHE+TngsILwkM0zN1bNxkWSpDctSY2
3H4aJpiZPw0KJ8h4kv/YoW4autrpLvre5WXV+9MWjTQc9xXNOf2IIPsXlg5e
+0hDiXcV8iaFBDlsnb/b6RYNVxqETxkVEeST1vUOWjdoOI/7uGQJQUoMntMg
QmjYycr3N2AT5GRn6GT2NRqmNr1o3FFNkF8G182uu0hDg6nQ24odBBlw9XXO
uA0N1f3JE/JdBHlAWG99vRUN5Rfn9OR6CPKQtOfGtxY0XEpc+iHZx+vjvt3B
x5yGXDHKSGSEILfPOSgJ7KFhYYKM5NpRgkz5uW19nz4Ns+W+DK8eJ8hzozfe
VO6i4b8qRx8unybIQGuT5Q80aRiRutJ72SxBuvi5fQxWp+E1daa54DxBzikE
KZxRpeH57CAF/gWCtEy7vOv4Zhq66BhOLy4SJOehwoKhMg3/B2xyYug=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Dashing[{0.03, 0.02}]], 
       LineBox[CompressedData["
1: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
oKU=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
OuAVl/gfq95ouw==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"premium rel err\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.02`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.673754006596418*^9, 3.673754097261242*^9, 3.673754318785267*^9, 
   3.673754516012022*^9, 3.6738250691591034`*^9, {3.6738367740852346`*^9, 
   3.6738367884887886`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", 
         RowBox[{"nfunc", "[", "x", "]"}], ",", "f"}], "]"}], "-", 
       "\[Sigma]S"}], "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", 
         RowBox[{"nfunc", "[", "x", "]"}], ",", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "d0"}], " ", 
            SqrtBox["x"]}]], "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"],
      ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", 
         RowBox[{"nfunc", "[", "x", "]"}], ",", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "d1"}], " ", 
            SqrtBox["x"]}]], "f"}]}], "]"}], "-", "\[Sigma]S"}], 
      "\[Sigma]S"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\[Sigma] rel err\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.004"}], ",", "0.004"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{"0.03", ",", "0.02"}], "}"}], "]"}], ",", "Dashed"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6737411681968126`*^9, 3.6737412897088523`*^9}, {
   3.673741375679921*^9, 3.673741376196063*^9}, {3.6737417026928782`*^9, 
   3.6737417062629156`*^9}, 3.673752127109142*^9, {3.6737523518721905`*^9, 
   3.6737523532587795`*^9}, {3.673752824167962*^9, 3.6737528694076576`*^9}, {
   3.673754543906227*^9, 3.6737545540397825`*^9}, {3.6738250310047984`*^9, 
   3.673825047873643*^9}, {3.6738369427714634`*^9, 3.673836953181967*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1nk8VPsbB/CDKeneFpWyh4oWuZGKcL+HNi2aQWQZsqTiHDOS4qbcuS4S
hUhdLbdFi+JmKVpueSb7vu/KLlrckFDE7/n9Ma95vV+f53nme77ne2ZG3U1o
5SFJUVQbvv7/zvv8R7WNTT6hVfZvO6PvDRq8UsvKo/lElBimyFp4w0jaohrz
KPStp0ezPbwhwfd+jVEh2tegLvGiN7C1g1aZ3flELCswXZ/sDb/qb67VoQoI
fZz+svK1N3R9LatVNywgIql1K0w/esMT28X7rtpgXn77g8u0N5x5eqBukW8B
oV7uDOpcIADt34brpJOxnhwHykAAxyeXNAwoFxJRteTE3ycFYO7kanvYEJ39
uSj5rAAUsx82dNgUEjrDavvCvwSQ/btJY21UIRH3O08NZgggpiNsv0VyIaHC
9hUeAgG4m1Y1FhRiv89Zx42lApgl5d70nCoi1I3JD10dAmhxT7Fbr1JERAsq
lMQfBJCS97UpxRC91jx47IsAglYQe01bdFmg19lJAViGhTff8MV+3vn1JzhC
WN5Xba8QXURoSSdu9k9CGN2h1BKbjJ6lZ+a2QAhFSQcdfi5CRx667SYvhCsy
j1pCe3Ce+2J5sYoQWK8xh2mqmIhjK/mBGkL4tZRuDVApJnTJFqN4TSHM145w
HDZE756MmrtaCN3nalsZW6yvmre1X1sIWQPK/F5fNL/ZdtkvQgjfe+iNc3Qx
EWml1YrXCcEhNZXflIz9ZokNr3WFoD3/2xvLIqzX14/U0hPClI+ZU2kP1hct
0v6CeVV15NutEiVE7NwrqYm+rVfvlK1SQmirr4df4/zjcaptmzZj7sLJKVgr
BPORw87ptmi9GWGb1ghB0Sa9bfWxEkKNdG6UWymET5nfne9ElxCRrKmH63Ih
ZC/e2q6Sgg7bk6qiJoQY//MHLhdh/48A8W4lIbg1NbTP78X+81zLATkh6Buq
uURIlOL6N2lx5gtB+opnh5RqKREdpxfFygih5XuGy+nNpYR6PzT6l6QQUhwn
O0Zt0R5yLxQnBMBTie58H439FVTxJby/GkFNru4paMuRFfGdAvjapt71pqiU
iGdbhS5uEsCVm0+6KiXKCO0Q+/FhrgC6l7V0Zx4rIxQEL7WPF0DZT56RF2Mx
56bb/XVGAFlfxvSOpWPOX3vS4TcBhOfKBa/7XEbE0bKr/BzxfLtbqiV7lRO6
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
K+ZzSAEX/gfXJO2+
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Dashing[{0.03, 0.02}]], 
       LineBox[CompressedData["
1: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
Lel6xYD/A/L44VA=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1:eJwV13k8VPsbB/BjKSUqLVfWLFHKdUsSUs/YilIziOxrwjkTsteVhiiNNZQf
qVSSys1StNJkHfvOINnj1pUSSVx+z/1jXl7v1+d5nnOcM+d8vyPv6mPuzk8Q
xCf8/PeXMRneYmlZCUTcl3P/C2WCAqPOrOlMJdDyfMYDPZgwnb+h1Ti+Ejjd
b/NKzZmQ5vegdV81msw+mLGdCUMz9W3y2lXAqpgIq+qn4JnVb8dvWFYBZ9vl
hAONFFx+7tS+wa8KiL2qXPUSClTPTrULPa4CWgBv/FoGBYEL4p0T0tVAi9c6
y3ShwNjBxcpDuxo4Cle2/GNBgWTpo84By2ogVtKefjtIQemF/V1t8dXA2hkW
clWNgsSBSyeOPsbcrGZKVZECN73mrqpq9OQAj7GJghUCbryXBBeIef/A3YIU
9LjlWu+W4QJN8vrrqV8k5FbM8HK1uXi8jLh9UySEKYGNshUXWEKGi6KfSDC7
FN192w/720tWkUMkbBlrsZFIwH75lZn0XhJ+HJLqSXqMPmV2tbSdBG7OSVsR
LtY3GN0tbiQhfeWTnqgRnP/uTMTeGhKY5KztElEDRP/VRloFCQfqaL0hMjVA
Mx5b2/qWhLWqbLspbbQo+92n1yQMx7b1UlZYz3xxkP2ChOIJaftRP/RZpZm8
IhKij51675hQA6z9RmvtnpJgm5dnz3uMbk6tZReQoLp27r0ZF+c1ThkdyCdh
0VffoW4E8yBuckAeCc0tMX2GfLXACfQuUkXfVe9wKJWpBVq2S4Y7OjBZ9sNe
nVog3rG3y2K/8bSHY4EV1l89r26J8yUtCz5s968FFlESvBKP/0/RL8esBLTD
jyfaeH6lvxn2y+TiPA+9sJHnJCQGxzmlcnGegf35Ffj/ufI6+9eOooU+7skq
JUFDW86ZzVcHnMI0xeIyEoTSvQYEZNGlUc90q0no+VXofF6nDohyQxPNerx/
dgsDP6zQj3bvudNCAkMmYfDvhDqglUttrugjQSGM5+KWWwesJv+LISMkzHyQ
H3rPxbxDRiT1M96fzGdDTXz1wOJTahKex/vDt+hqIlsPhM6EqL0ABQdcDw2X
6dQDx0X33BoRCoYVe4aL/NET5MkUWQrqV3nFpCTV4/OSUaSlQkHx91l1/wKc
d/TggpEGBdHlGyN2TmK+WPY84Qh+/93M5B6TDcCaNeljh1Gw8chA9ZUrDcBJ
3KujEEvBorqPj2cO5gY5xSvTKWjhjytV+tgARLVt5utiCoLucu0zXRqBWMZ/
+vB3CpzYJwQvsNAf7Gz4BZhg7PfxscNt9Hlxwy/rmCClLzgv2dcIrAOVmy12
M0Fwe/LduflG4Mw3nK0wYMIXMYXDPMkmoDmXZNkeZ0LXXP63Yu0mYKWdeSnm
zgTOIKRds0bb8FWNBjLhYU0jLSC4CYjl4w2tl5iQVOAwbn4d+0O1l6nHMyE0
7Z+EXUXoTQ8q72DuHv7n3rXt6JxJW4ULTDjmJdz/ZQr7JYTvPQtmQkaOafnH
Fc3Actntb+PLhKjEXrJyazMQVXUdfS5MOCd4r1RjbzNwVA6Ml9oywTuEXJd1
EOtLll0ssmCCtfPcywh3rGcUz44aMWH7TvGVtHtY35CRf3IHE2SzPtjnFWJ+
QWqdgBIT1m/KzpctawYa1+bCa1kmLCxpWP87gE4v3BWK16uxyfzBK9kW4Mh1
OB6ap6DMQHJeRQ3dbPmKM0PB8+eDx9L2twBLbDPP6isFmbd9fwTbtwDRoqLV
M0qBv0+80Z50tE+crn4rBZ7DlmlZD7E+7Hd2dgMF9idkJta/RNuNF22roeAg
5KZMdaF73CovcSjYtKZ2OG9jK3DEjto/zKeA5812lNjSCqzkknrtvyhIazzc
HaHeCoQklxh5iO/H+LpGS3or0NTG9aLuUdA7EWPy1gFdcFEkNJOCjKOmFduY
6F99G2NvUiAj2vByPhrnxzzSnE2l4AMzTsM9Fa36ecLsGgW36o/mNd5HL2Qo
ViZRIBfbmHWnDI+3+53CdBwFA5/jN69qwfzHS5+8GAruHKGnB/Tj+a09pB9x
hQKFVc0JhxbQ/r02p6MoGCIThQuE2/B9FyoUdZGCe7WMKEmJNqDd+LXqaTgF
W9gt5yb2tAErRaOagc/D6N9XZ6wMMe8eqX8bSkG2ibkvxxx9illt8CcFW1e2
uSf74LxbwuJXQigY90weWDjfBpyQu3dNginI4VrYnYrFeSe3JsoEUeC1bUNn
Uzr254b5CwZSsD26naH9EPstn/T960/Bp7GUurvP0SpD9ivRjw9ZHhSpwnrH
4FBlP3xehTr39Q/hfJ71m2RfCv45db3Y+Bs66H+jQz4U/FVltatwCV2y850e
2ltZPFdqdTuwOsfr87wpULvUpRwl3Q60ifGLqujJ0dQ7X7a3A/GR4/j8NAX5
RtbS1trtwBE800ZH+97flPruEPZX+FjOMCnYtaxbbIcV1h9/avkAPXUyLTbl
JObvivXd0YUVNkKLfuiuiGg1tP8WyQiPcDxe39NEfrRGZM9CcwLmReFlAxQF
08PpwTq3MO+qjOCiiwzspu7l4vwT/Bov0UH3pE6Lvsac4aVZiNYUeD8WVIPn
Fzo09p9/uGa4DnRhvc66rFfo52X2fSYfMe9xqvhvXoiCjPXTabTrwu33aK2I
vlZpgQ5cj8ZiZtBzgzePXhLrANqzaVNFTwpe6TlyJzd3AEezJ+SHKwX7+PpL
ynTRU2HCj6wpWHC+raV6pAP3J/5jbNwPvOE4Pb1mg/M6i7i+x/D9zBrI8QxC
L9c+Y2pIAW1pMHl1Ps4PNxsw3kmB636VvD9KsT9eTNN3BwWRf/rWMuox1zRo
vqlMQfXsIpE8jsfTvekhIkPBsa9S3uLyncDJFx3QEabAYdDSWC6pE1j1vPaZ
UdwfbL7pppeJeV8SJ2GQhEyHkTDXJ+iGFdd24Xoz0u1XlFXbieu3tVoc7geY
rQkKKgJdwBmeNLtfTsK58pqFXQFdwDI7yHa8R0IGn9gmiwjM9zjdOncb10uw
3h2QiPmezPe3bpDA9+ajV3Eumnj8ZikZ1/tnAl06o1jvliOqEEXC9fv7Cwys
eECLu2Lf50nCi+HI+pMnecC6P5kS5I7rpXz9WJQf+q94YXFXEmRu2cpy49G3
9x49bUdC1vXgGNNq7I/5ZMU8RkJVe2n26Y7/+meydY+QML5ueVn8MFpY13a9
Me4nElJ+Ni/xgLPVkmrTI+FYQ+/6KdFu4KQZXX5zgATfVYp/rJdGMwoiHu8j
IcmEPKyxvRv3Dy46mVokPL1c4G6phXnCPnb6HhIEvu+S0xPtA0Ls8+iWHV7w
KCfI1I4xAIR3rIWXjifo16ie96QNASvGqfq+lgcsFZWWem0dAVrPg21TBqdg
v7R3f97EKLAuLTl4+LjDp++BAcY9Y0BcTZNanXoSNhndGFfK/htYklPbm7vc
gHLNOD3r+RmINeTIH9vc4PdvM6ekzCeAFTfn0BvoCr5zTIiUnASO+Wsli24X
uKotW3U78isQCjkKS9ouEPr+e0Bw8DegrdUxjH7gDNt0rZO/2UwBTUJ+aVHZ
GWLaxz+n0L/j8530tfCgE+SprHjWozENrK3VW9WdHIH93KLY5PcZIDbGN1/0
c4CQHaLv1OV/AHH99JaNqfagbG+5r1RwFq8/XUitww5iKmsm/eZn8foEEsRq
Oyj4XL++dvAnEDtNOxMcbOHT7H7ajfI5IOS+nKl6YQM9ur3Z1178ApZbenbJ
ahtgHxA6r35zHojfXwrnBlvDVIhT3M+UBWD90hG/1HsCmGlK2VrR/+L+mBMW
YXICHgSdU5OiFoElmL3+VLUVpMXOf1V2WQIWO/b9GZoVZOdFXSUVCRoRZrNv
qNoSVsRWPFlMRm/5FBNuZQlVkRJeW1fz0VgZR6UjB47DSO8eO3kWet+SSE/Q
cXCke37Km0f3HL8/vOI4aMm7Fqzx4cc8/Lt+tgVIfUwKVR3gpxE8McfNJhZg
W9090mcrQCPOTn4dGjOHueXjkc4N6KB6qfBEc5h2FSkLNhGkEbv1NQ33mMPP
Ag8B03L0Z7UXRL8Z2DuxQ79pLKOxjkeetb5qBtIq5Uk78tE8KyURmhnompUP
aCoup7Eecpe9+sGAU8xf6kvJy2lEzmq6SgEDPt87pGC/WohGuLy+sNWTAS3a
9iZslhCN9dfwRx1lBlSUiMtFR2BeYCkrocSAYr22H1GR6I21obOKDEg3OZwV
Ho1+GPTkmTwDXG20lkIS0W/XD++UYcB0yIYij0z0ncsROzcwYNOLejkjDs5f
tkzelJ8BwrrRs/plaNNr4n/wMWDhrQH+bkBrzqmvIxgwWP3qT10u9reO5RXM
0+FRV07n7mb0ZvuCpik66M5GxioMoAdyTSQG6aD2J81Nbgh9i/d2+AMd5Jbm
tWVH0E6M80/e02GZkP+YxDja+3qDIY8Ojb+56It9RR+TexvQRAdOurTEmim0
YiSl10CHQlnepMg0umXJYXUdHVKV6TdX/ES7p254WEUH9iPhgOW/0IUkL6iC
DqFqVYcFF9DRRYOGZXTwLgyX519EO9N3rufQwVlz/8+lJbTcbxWDJXT4P7/W
1lE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Sigma] rel err\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.02`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6737545646497717`*^9, 3.673825108987114*^9, 
  3.673836968351853*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"nfunc", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673754717971363*^9, 3.67375472569285*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({0.00006128571428571428`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.6737547260932817`*^9, {3.6738251295147486`*^9, 3.6738251317177367`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV0Xk0lfsaB3AyvBJpwI1Ihsj7vidloVJ5HiGccrLlRBmPmRIqQ3Z1DIUU
olB2ZThtl4gMOclU4oac2OGyUSiEkCFUkvveP37rtz7rWc9a39/vq+ziZ+W+
QkBAIII5/7+fBVTaZNs1wGbLSYXM3SRmH1CKDdBtBHu+YKHkQRLN+D4HHY40
QpOGIX3MgsSxE2US5gGNQHj9vTP9MInbEi0SNj9sBIXHlds3WpNY1sO+2aLW
BK1GR7Xa7Ums9++694v0K/jTWDXsqC+JHkJqznLar6Al28uZ5UeiWIqfsojl
K0jpLM03DSDxUIXo/d6rr+ARp+OZeiCJ7SK6uVeFmgH93ewenSdxMC2xZHSm
GUbtZNhLsSQK1f/awOW9BpP/lPr13ydxg6V+rfzMa6jdwnG4lE0i3aNZmbCu
BdT0OmfVckg8Oi326NyRFjjG2eBsn0dijuLLVIuOFnj+xWGALCZRvSKzJPRk
K/TS71R+1JDYtH5TpIo/Dz7vEQ2M5ZNozZcRcAjjwcjiNlXJHhLf3ZO8kHqd
B276Iay4XhJnNZeCJIp4EF3dbxjVR6IC9vrMT/NgtHT39+NDJJ46mWbVdOYN
RA1dEb85ReL6elmV08Ft8Kgo9bGHCIXFEyOOqVFtkFZd1RQnSqGlbAWnMrkN
fDj83SUEhfGeTjJEaRukGrzQ/baSQjHxHLE7U22gFbZ2/enVFP74bffneu92
qLmlw5f/F4WDXXaVcvYdMDfy7E6OBoURgtu+GZzogOjvc3cLtlKoTArouYV2
QGPXmGeJJoWO7PuFBbc6IDje076corBLcSLLqKMDJAbnZsu0KPzH5eIV39/+
C4NuBRC6k8Ky8Yyjz7ETglVb7egDTL619VoUqxNCfGe8lE0p9NAbFUv+oxP0
azYby5hRKBu2o8IrohMOdxac/GZOYeD6WqU1dZ3A85isLrGgUEf/w4ijaReM
nvhIzlhTWBS9hf3Dgg/y1mq77rtQGJNvbu3hyAfjlzgR5EqhM8/3l9ZTfLhB
tz8yc6Nwzcayvr8S+PCJ9D0x6k6hf8EB44M8PqRE1g8reVO4rcNTMs26G/h5
1yQ8/CjMV3mQvtOuB5r6e/9MYVP4XZvdaX2iB7ImVXwOn6fQzOiQ1Gl2D2S0
L6USFyj84Dp5MZ/TA5vM1GsDL1Ioz9V2VO7tgYTsbT7m4RRe0ahQWOXQC1kS
l7peRzHvp5tvv3N8C4Fdwbm2iRQq6U3euOzSB6wDevOc+0wfubevxgX0Qe6q
9iOqXKYvBZPI5LA++DouaPiAcY7QndPce31wy2BAuzybwu08c1Z9dx+kG2zd
3p5D4eYyq+gIzX6Il43vmMtn5qwC49rMfnB97F04VkohK9q9xjBpABrIocqi
FxRuAreVXmkDkMl/eJeqo3B83uVIfNYANIYIyXMZx3g4f+wuHgBOoP/HlHoK
q03spM62DYDJiORg4EsKaWGWU7b0e6jL1e9WfkUhEb53WTz1PSxo71q55w2F
VaHroZ3zAaK65Qsv9TH9tUo+rY4YgorB5KkjcxS6JXPFZZw/wqcBNd1CgkYc
OD/0030UzkdKXh7eQCM3IaMCzT+B5pBB+rA6jTr1Qgqyv0+AjNr1WAMdGsO9
ha1sbD7DLfkLSy1AI/UkxzCEMwX+B8ckA80ZL59Kj0+fBh136YAeKxr9gnu+
WybNgNGdD0Evj9NoVuK50eH2LGT8fGie6EJjWHatejrnCxgl9xpe8qbxR9ML
rbhrc9CoYRFz1o9GyZLBpbrEeXh+QCzRKZBGl+a8xpzLC5AwLnMtOJRG2buG
YbVnv8If/hrdcn/S6LRjYXFLyDcYP98QVxdJ48S8VaCuz3eAiZoGXjSNUmGv
S+L9FyE+RGzN2FUaE59teKt4+geoTVvP5ibQaKO9UviYyxIontEzmU6isdhT
buqtx08oPxOxyiyFRtbrFv7q48sw+WE5Wu82jVuDyE59NQHMCypPmODQOD38
Q/UGVwAVTJNGHt+j0d4/y89wkyDKifr7kZk0JvV03pXOFMQ+yazMwr9o9HHq
b9q3cQVyWmyejHGZfQPLCcEbK7AqRNd1+d80GglYzoxJC6HvWoFxtQc07uxW
mdeMF8KbTglakvk0ziVf7o1bK4wLD2TtRApodH14+Mm1JGE8pSTV3VtI45m3
40kD4iJoaaS4ObyIRovPcpZ2cSLovfrphE4JjU1y8hIUIYrb3fNMn5bSOJ8e
XpV8URTLVMRubi1j/o84x9oiQODedeHN3L9pjIoxGhQ/R+BYhvbuxSc0vuAk
PlFnE5i8qVJKsJxGgcK+a/svEGhx0HhIlPG5DrZuaDiBPsOsuHWMT6qURo1e
IZC64cPTZMyqVNNsSCNwu0mHpi1jhSmRU5crCWT/zFMsZWwrZL0/s5rA2daM
9nLGybJZslXPCGyZvxtbw3j1PoOaL3VMvoDi2SbGgrFBa9z+IbDy+qGnA4yH
VT8W739H4OOvMXJST2lU3akb7dhPYJGmxnNpxs6/RtqFvidwX9gbT3nGfH8l
4eJhAuPfsIq3MG6usvld+TOBQ+zFPXsZi/G4mvumCSTNV/UaMjYZnF2ynSVQ
lkuyTRlXi1/Pvr5AoNe+22VWjBcV34XmfyNQWnrUypbxrh304YZFAqcfmk86
MD5rHKo6uESgim1FjCvjIpuGheVlAhucDFS8Gf8P4DSu2Q==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 13.05},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 3}, {13.112557319727841`, 14.364083356966049`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6737547261245313`*^9, {3.6738251295303745`*^9, 3.673825131733363*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Almost Same Forward and Spot Vols", "Section",
 CellChangeTimes->{{3.6738253751996326`*^9, 3.67382539733248*^9}, {
  3.6738254685440764`*^9, 3.673825473567645*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]S", "=", "0.31"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]F", "=", "0.3"}], ";"}]}], "Input",
 CellChangeTimes->{{3.67373310916434*^9, 3.673733127047265*^9}, {
  3.6737339184669576`*^9, 3.6737339291887183`*^9}, {3.673733989803666*^9, 
  3.6737340031449385`*^9}, {3.673734060207706*^9, 3.6737340754994993`*^9}, {
  3.67373412765322*^9, 3.6737341304601746`*^9}, {3.6737341728326807`*^9, 
  3.6737341743501315`*^9}, {3.673734314273548*^9, 3.6737343170607023`*^9}, {
  3.673753077325288*^9, 3.673753078056952*^9}, {3.6738254021600323`*^9, 
  3.673825408556346*^9}, {3.6738254575975947`*^9, 3.6738254603741226`*^9}}],

Cell[CellGroupData[{

Cell["Exact n", "Subsection",
 CellChangeTimes->{{3.673753136858305*^9, 3.6737531389525075`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"resATM", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"it", " ", 
        RowBox[{"30", "/", "365.25"}]}], ",", 
       SubscriptBox[
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diff", "[", 
            RowBox[{
             RowBox[{"it", " ", 
              RowBox[{"30", "/", "365.25"}]}], ",", "x", ",", "f"}], "]"}], 
           "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", "1", ",", "36"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673734534063858*^9, 3.6737346106940417`*^9}, {
  3.6737525527660403`*^9, 3.673752553144553*^9}, {3.673753011742202*^9, 
  3.673753031165372*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\\!\\(MachinePrecision\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.673837378801056*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\\!\\(MachinePrecision\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6738373803697295`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"resOTM", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"it", " ", 
        RowBox[{"30", "/", "365.25"}]}], ",", 
       SubscriptBox[
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diff", "[", 
            RowBox[{
             RowBox[{"it", " ", 
              RowBox[{"30", "/", "365.25"}]}], ",", "x", ",", 
             RowBox[{"1.2", "f"}]}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", "1", ",", "36"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673734534063858*^9, 3.6737346106940417`*^9}, {
  3.6737525527660403`*^9, 3.673752553144553*^9}, {3.673753011742202*^9, 
  3.673753012565666*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"resITM", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"it", " ", 
        RowBox[{"30", "/", "365.25"}]}], ",", 
       SubscriptBox[
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diff", "[", 
            RowBox[{
             RowBox[{"it", " ", 
              RowBox[{"30", "/", "365.25"}]}], ",", "x", ",", 
             RowBox[{"0.8", "f"}]}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", "1", ",", "36"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673734534063858*^9, 3.6737346106940417`*^9}, {
  3.6737525427497272`*^9, 3.6737525432540674`*^9}, {3.673752999766861*^9, 
  3.6737530011526103`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\\!\\(MachinePrecision\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6738373859538126`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"resATM", ",", "resOTM", ",", "resITM"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"12.5", ",", "14.5"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "14.5"}], "}"}]}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{"0.03", ",", "0.02"}], "}"}], "]"}], ",", "Dashed"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673734624415484*^9, 3.67373463581135*^9}, {
  3.673736570468935*^9, 3.673736572703288*^9}, {3.6737516589293175`*^9, 
  3.6737516592609296`*^9}, {3.6737525709050064`*^9, 3.6737526081804457`*^9}, {
  3.6738307744611883`*^9, 3.6738307789622197`*^9}, {3.6738310902999735`*^9, 
  3.6738311032992725`*^9}, {3.6738316463023233`*^9, 3.6738316567765427`*^9}, {
  3.673831695913327*^9, 3.6738317657066813`*^9}, {3.673832219887678*^9, 
  3.6738322505396338`*^9}, {3.673832284972686*^9, 3.6738322856210747`*^9}, {
  3.673832331185317*^9, 3.673832396504833*^9}, {3.6738324738823905`*^9, 
  3.6738325013485765`*^9}, {3.6738326853076*^9, 3.6738327260682554`*^9}, {
  3.67383280960983*^9, 3.673832840001913*^9}, {3.6738331556371074`*^9, 
  3.673833169632131*^9}, {3.673837425162632*^9, 3.6738374253007536`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQfYL1cPZVtq326l+fH9perekA4R+1n6Kqkev6Qcth
TccSRYeu8/YhHHxSNZ3aUPmr9tc4XRY13dV2sDq++ViXxy37PcprPq8S0oGq
v2/PYXXpcqS5jgP/Uq99v1If2R+S//rAKEgHqv+pfftO5tub03QcGtOsJTcs
f25/LzLtx/0yHah5r+w1YmZZfW3WcfisrlOS+vKNfeNenumH+mDmv7cvPDtr
wpXpOg6bSvrSe0U/2kunz3zZOx9m3yd73i99ImbLdBxyrrKJZmz7bF94so2T
aQ3M/q/2qUtvP5LcqOOgYlZ/yCn8m/35PLOeOVth7vlu/+cZn/2inToO96Z9
z5f98cO+n/Wjld1emPt+2W/NXPun/oCOA1h6xm/7yyW9ciWHYe79Y78qd/kf
lWM6DgERL05dsvxnf8lGX3/2CZj7/9svjT357O4pHYeWGIM9YbkMDvI6ssaf
z8D8w+jwWyrL8sE5HYeHPW+EjuxldFh4QS9+5QWY/5gcWuuvZgdd0nGw3bsi
05CP2cGipGXxvcsw/zI7CKUtvRNwVcdh1tuUA/PiWBw2/AubuPoazP+sDtdO
z3374bqOwzdZRXGe9awOGa7Ct5VuwsKDzeH5tGYu51s6DsF+d3Mr/7M5aJV8
+B10GxY+7A6bfjuyhtzRcQAADFcN4w==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{0.03, 0.02}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQfYL1cPZVtq3207yX5S1epekA4R+1tzv++ZI5g7bD
mo4lig5d5+19OXssmyZqQ+Wv2uvsvP0s7JG2g9Xxzce6PG7Zn3eQn/9EVAeq
/r69/9vtXissdRz4l3rt+5X6yP5Jmqrku2AdqP6n9sduPDrNk6Hj0JhmLblh
+XN77WN2fF/KdaDmvbKfks1qcr1Fx+Gzuk5J6ss39u97Hn2t64eZ/95ecpfA
/+IZOg6bSvrSe0U/2jMdYpsptgBm3yf7q1fFJ6xZpuOQc5VNNGPbZ/v9ux7s
zFwDs/+r/aVZ85NLN+o4qJjVH3IK/2Y/U+T0k7dbYe75br/EZy7n6506Dvem
fc+X/fHDXnr72v31e2Hu+2V/71C46+4DOg5g6Rm/7Q/azmVZdRjm3j/2tYGn
jMOO6TgERLw4dcnyn730MjXfEydg7v9vf2VbSib7aR2HlhiDPWG5DA5XTlxp
kTwL8w+jw9+MT1uYz+s4POx5I3RkL6PDl1+eQacuwPzH5KCR1StZeEnHwXbv
ikxDPmYHlUWfXX9fhvmX2eH1tYxl2Vd1HGa9TTkwL47F4bP2jnVHrsH8z+pw
9VRnK8cNHYdvsoriPOtZHaQyHvFb3oSFB5vDYo1Fv8Jv6TgE+93NrfzP5jBF
MetQ2m1Y+LA7RD823ZV2R8cBAMY4EEQ=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQfYL1cPZVtq32pjaLWj8d1HSA8I/amzXfX63Ooe2w
pmOJokPXefuSLs6HDVO1ofJX7XNFJ+fve6LtYHV887Euj1v2MskPd9eL60DV
37e38mD1OWel48C/1Gvfr9RH9hEBr06eCtGB6n9qX+qU2rsjQ8ehMc1acsPy
5/Y9DXfbait0oOa9sp+czLXTvVXH4bO6Tknqyzf2KtYTDt7ph5n/3t5T6Fni
4Rk6DptK+tJ7RT/aF/amrohaALPvk33ydo3+58t0HHKusolmbPts/9VHP3ru
Gpj9X+33q0//vGijjoOKWf0hp/Bv9gyq3Gli22Du+W6vuiLRg3+XjsO9ad/z
ZX/8sD9wPCl+wV6Y+37ZnxEOOHXjgI4DWHrGb/v4j4q3jxyGufePPdeCoK15
x3QcAiJenLpk+c9eYZ3LkXsnYO7/b9/zcY+IzGkdh5YYgz1huQwOuTXZM3XO
wvzD6PD0xcd40fM6Dg973ggd2cvooH08c9etCzD/MTlY7NZLaLik42C7d0Wm
IR+zQ2kzawfnFZh/mR0U0+T/VlzVcZj1NuXAvDgWh526CgYXr8H8z+pgxs/q
KnJDx+GbrKI4z3pWBzGWbjmXm7DwYHM4nD4vPemWjkOw393cyv9sDmu+G8wu
uA0LH3YHufWnuAru6DgAABz9A/U=
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 14.5}, 
     PlotRange -> {{0., 2.9568788501026693`}, {12.5, 14.5}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 14.5},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"n\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Medium], Method -> {}, 
     PlotRange -> {{0., 2.9568788501026693`}, {12.5, 14.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.02`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.673734636706685*^9, {3.6737365667093134`*^9, 3.6737365731572046`*^9}, 
   3.673741965784775*^9, {3.6737516299967875`*^9, 3.673751659962138*^9}, {
   3.6737525844713774`*^9, 3.673752609519578*^9}, 3.6737530469091263`*^9, 
   3.6738254944035034`*^9, {3.6738374156687183`*^9, 3.673837425785074*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using long term n", "Subsection",
 CellChangeTimes->{{3.673753147869405*^9, 3.6737531527580013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "14.5", ",", "f"}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "14.5", ",", "f"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "14.5", ",", 
        RowBox[{"1.2", "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "14.5", ",", 
        RowBox[{"1.2", "f"}]}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "14.5", ",", 
        RowBox[{"0.8", "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "14.5", ",", 
        RowBox[{"0.8", "f"}]}], "]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.002"}], ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<premium rel err\>\""}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{"0.03", ",", "0.02"}], "}"}], "]"}], ",", "Dashed"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673735023103979*^9, 3.673735065928793*^9}, {
   3.673735156998191*^9, 3.6737352315555964`*^9}, {3.673736600222391*^9, 
   3.673736639314528*^9}, {3.6737366714057083`*^9, 3.673736756119498*^9}, {
   3.6737420001361694`*^9, 3.673742002484271*^9}, {3.673742039329338*^9, 
   3.6737420707845697`*^9}, 3.6737518432594795`*^9, {3.6737523300050054`*^9, 
   3.673752335060376*^9}, {3.6737526578791895`*^9, 3.673752719150693*^9}, {
   3.6737527657305636`*^9, 3.6737527814148493`*^9}, 3.673832172571147*^9, 
   3.673832433248458*^9, {3.6738329357709723`*^9, 3.6738329584133015`*^9}, {
   3.673833015161359*^9, 3.673833056123461*^9}, {3.673833213640569*^9, 
   3.673833226150157*^9}, {3.6738378241627846`*^9, 3.6738378499561834`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
d0tZCyXof6qpcNY=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Dashing[{0.03, 0.02}]], 
       LineBox[CompressedData["
1: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
RbVPNeT/AP6fS0w=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
suloq3NgbnmZ8iHhaG3NouP/AMAbzbQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"premium rel err\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 2.9999999421768706`}, {-0.002, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.02`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6738378139918118`*^9, 3.6738378631051555`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "14.5", ",", "f"}], "]"}], "-", "\[Sigma]S"}], 
      "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "14.5", ",", 
         RowBox[{"1.2", "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "14.5", ",", 
         RowBox[{"0.8", "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\[Sigma] rel err\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", " ", "Medium", "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.002"}], ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], "}"}]}],
    ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Dashing", "[", 
       RowBox[{"{", 
        RowBox[{"0.03", ",", "0.02"}], "}"}], "]"}], ",", "Dashed"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6737411681968126`*^9, 3.6737412897088523`*^9}, {
   3.673741375679921*^9, 3.673741376196063*^9}, {3.6737417026928782`*^9, 
   3.6737417062629156`*^9}, 3.673752127109142*^9, {3.6737523518721905`*^9, 
   3.6737523532587795`*^9}, {3.673752824167962*^9, 3.6737528694076576`*^9}, {
   3.6737529115909433`*^9, 3.673752922018859*^9}, {3.673833093980359*^9, 
   3.673833102776343*^9}, {3.673833467354437*^9, 3.673833488500064*^9}, {
   3.6738378626721506`*^9, 3.673837863336903*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Dashing[{0.03, 0.02}]], 
       LineBox[CompressedData["
1:eJwVVXk41PsXnpAvlbqqmyYq4xuyZ9oQfb6MGE3XPsIMRSsJZc1SuCayhhR1
/aiEul3SrancmuNnyb5kmyxzrTGt9i3iTn+c5zzv857zvOd5n/OcQ3H3sT0l
RiKRroriZ7YejXzHZFYi/payUBNJF1CyrrNpulCJqHmbhtZ8Y8PUk40t9KRK
pK5Muv6jnQ2ZF/NbDlRVIqWxTg/rPDYMTNe3UvTfIrvLprZ/09kQsCjX8VWh
Ckl/teGp3WDBbenCLs5QNeJz78r10JzBy3PWeZlUg8ZqfPcJdJzhYB3RHby1
BvE0dj9ckHeGwYTW7nMONYi6JJmRPOUEmr/M99hU1yDajgGyTL4T8DaZ9m59
XIs477MjNGWdYBDvGnzuV49YrcmuMXNHoX61R/yN1HpE/eZNOz58FLiTs1S/
4npkNyD8YNd2FGLLf43aNVqPuJKekXFPjoLmCRvFPz0b0Mk16uI6nkch8F41
O8etEZG3V8SrDDgA53q3Z6VqM8oreNAZMMiEEIn7vD37m1GTro40rY0J3sGe
63PNmhGrN2FwRyUTHI/Pv4o61Yyy5NynlfOZoL5LTpq434zIySxNshcTGpts
80u2vUM8Wo7SvXl72LyudrDo1xbEW3fmg4mSPbz3jnMl72hBeQp3s/dvsofM
xsOdUdQWxHEsvGqwyh62JNU1Mq1a0EnN1EueE3awVabh1UJsC8piWNr6ltuB
0urmZPPFFmRXhoUsn7EDTazjQO9AKzpBTEulldjCl9M3ufTxVsTZKV5FeWIL
f7110H263IrIfELs9QNb0L7KV+EotCHOXP+D9Sm2oLuyU1bDoQ2NfSi8a3bW
FvaJ94wE1rQhYYbd8KvNtkAs96etfdKOeLcuVThG2oC7kVqRDq8dUVtOZJ8I
toHoUN9a63oR/+dMXJCPDVTNLpHShO3IoGjUpcTFBizH5L3lKB0oerEy/JGB
Dbj0M+mKqR2Ib/nlN7UZawgpr1nU9eejJnK7J8PPGv6OKT7F1OtEnBzvV/6Y
FRy/dmfjQ/NOxH1LMlKbs4S18ZzyRYdO0T5Qn30RWsLZJCdKboAIh75Xyam1
hK3pKwQTTztRlfXrKm6SJcTcs7G/rtWFaIr9jdfJlsB6M25Sp9SNaHRdD2/9
30B8UlfRWEaADLCA5IksBoT1bZxJkhcg/sQN9exUBsw0zNb1qAlQ2Mi/JGYM
A4QFb4KCzQSIQTlA7fFlQKOrRVPRFQFKLOZdPGrKgIza45e3TQiQV/je77Nf
DoPmveSehY5/Edf7k1im6WF4VBB4hGXdh5Q2Mu8wVluAZqR+pLyjCD97EaG7
wgKKnBafdx/rQ+TQvyK3z9Lh2aqo7WyfPsQYv1m0YZAOb7wSJ9hJfahJ//ci
1j90aN6Vm+Fa34doUpdl3c/TYebluyE3ej9iZAYLpPnmYFKjGX6WGEDqAtX8
BZ4ZTP+yO0qCPoCoKlaP6rhmUOCoH5NjNYC4lgoJdwvNYK3wUMp7V1E980mL
6//MoEvy2AN6+AAi+/W82XbZDC6YpjTsLBkQ+bHhn8KDZpAD01s/7h5EJKlP
IcPlh2D5OY/noTqEDIB5KUZgCkYK3r1FXz+g3s9ulmOuNPg0GeBP7xoR6Rv3
Bswbw+ZDd4TKeR9RolPCAo1PwDn3P87Pnv2MvM6/VvJ8iUBrfPq0vO1XxDWT
1a1uNwLfeS8UvWUU9dUhMx9TQ0jR3/Y2O3oMSet6uPnyDCCsZ9I/KGgczfGW
NE6d1oedho5p404TiDdiSWPQ9CC+Tfj5htUkarp2paEA3w9FalLPuvZMoUSK
zwd97X0Q98KOa6E1jdLvXbtJGOyFYA2Z/1MpM4gVH/HwsOseUGEzD/AkZhGj
5sKD5JzdEF9ZM3pxYRYVftijK+inQvHn+g21/XOI2lFq52tIhU+zRsSd8nkk
fFwqP5yrC12G3XnpL78j3pmTOsRqXYg7iIVTsxZQeqr1fjHOLpgIPpY4d2NR
dK83a8vN64BXpnKeXuwPVKXHmyv7oQ35gSHa8ueWEHV4O6VXURsyExbGVNyW
0VjWsa+tB7Ugr4iT4omTiMR3zwoDgzRBKqGicCmNRGT5ye/awNOAt9FkD9W1
KwhZE5nHR5bVYah7L4sSsYLoY8lr2Tmog6vV2U9FCyuILLuR0oMFaqBHcS9e
5yNG8A2yq7Nl1EB+ODVMs0+MoFVvYU2E7QTnqs4hgbM4we3gu+iPqMK8pDD6
eIM4kb4+906DmypMua8pC7KQIJo6jQ/m8lVgrviM+JFyCcL/m/GcrIMKsI/F
hY3vWUkkXhCuMh9QBgW18lSNJysJ8u/t7z56KIOhTXnfPlySaJovYW5f2gGn
vb5Tl9MkCe5MZml4xg74fN9cib0WIwrbA56Ga++Ad/psi7gIjOB/n9jPasKh
4o2cYmwURghfv3cvacCBa9w6w4nGCJOd9i3kehxuWxzOjYzFCPKJkcud1Ti4
O+ktB1/HRPMPrWaX4TAVvPH5mRwRj08On3+Ow+aX9YqHSjEir22XVsUdHFYZ
xs6alP3sJ9dq3MZhEWiNRAVGcKxPP0zLwKG/qiTUsBojpPtddU6m4/CIX9Cx
uxkjqFfTHaSScTCcjU5Q6sMI/8Ir4i5ROGiHEicUBzCCG1hRWh2Bg+Lygv62
IYyY4/0Be67gsBLzGyELMaIq2DxSJgyHxk1uJrJjGMGwWNpQFoBD6W0F8roJ
jPBKTOnW8cfh6bb3o2umMEL034eyLuJwS8UqS2rup1+3XoT44BD3aJW/5HeR
XwYNUR/P4xCm/fawxCJG9LJykhy9cPB+GkkRW8IIEmHQXeWJw/F9RnPLyyI9
D5ez+z1w+A8Snygc
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
/D8nhCmW
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Sigma] rel err\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"",
          TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.27, 0.18}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.02`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.67383787694785*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optimal n?", "Subsection",
 CellChangeTimes->{{3.673753177615955*^9, 3.673753183266223*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nn", "=", "13.9"}]], "Input",
 CellChangeTimes->{{3.6737521778290286`*^9, 3.673752183349081*^9}, {
  3.6737530910898623`*^9, 3.6737530917220383`*^9}}],

Cell[BoxData["13.9`"], "Output",
 CellChangeTimes->{3.673752184366627*^9, 3.673753092005966*^9, 
  3.673753190997059*^9, 3.673825557408822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "nn", ",", "f"}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "nn", ",", "f"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "nn", ",", 
        RowBox[{"1.2", "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "nn", ",", 
        RowBox[{"1.2", "f"}]}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", "nn", ",", 
        RowBox[{"0.8", "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", "nn", ",", 
        RowBox[{"0.8", "f"}]}], "]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<premium rel err\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673735023103979*^9, 3.673735065928793*^9}, {
   3.673735156998191*^9, 3.6737352315555964`*^9}, {3.673736600222391*^9, 
   3.673736639314528*^9}, {3.6737366714057083`*^9, 3.673736756119498*^9}, {
   3.6737420001361694`*^9, 3.673742002484271*^9}, {3.673742039329338*^9, 
   3.6737420707845697`*^9}, 3.6737518432594795`*^9, {3.6737523300050054`*^9, 
   3.673752335060376*^9}, {3.6737526578791895`*^9, 3.673752719150693*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1nk8VdsXAPBrvEhm9xhKhkylQirCWQcNqJcSMlRmmRWVMVOoUKGSqJdC
oVfSa9Dgnp4h8zyPdzSkVGbX+Du/v87n+9mfs89Ze6299lZyC7L25CaRSJu5
SKT/P4//jmuzta2GDu8V82voAVz5eMOJlgvVwPm5HtA4ZobPvpZqN79VDboC
Y2spGWb4g+Dn7YY11eAWFJPk9NMUZ841digZfIMrDd4Bga9N8Ld2FJsc22/g
yrzW+MHDBL/2wblTKvgb6EY/ijGVM8G1wqc7yS++QVGFdQT3DQy/tIJ0T26q
gbCFUGv+7yhufsbV7pxBDdQJ+o3Ye6C4HLW4m25bA0WJ0xMtDGOcGmPc03Gr
Bi6tX9vPxTLCBXjcez+SaoG6zz7n1Op+PFvwVX8iuxaSE4pl8Bv7cH/fBcd1
Uh1ov9QSpyvvw9EGbCBscx2MpVzgzizfi7NSOwb87Org0fmii3kLe3AtMc7g
ido6cA3b3RZzRQ+nUg7QNv9TD6vRf16l1evgaaE3ne/X1kOO3A/t4XAd3K23
myY2Ug8amTOvnLbp4ORsHzqPQgNMJYWWtd3Sxo9vvs34frsB7uaFbjGs34mz
VPpZ70IaIVGGr/hA0ja8cYNPyt2MRpg9ui3m3bIm/n5mQTektBHsY7GKgyGa
+PVK6Xjt341AWo8S+9tbA9dyP6H4wrcJWrFy++1+avjlp7Wnc12bYSCleQ2t
Vcadk0/xxsQ2Q8BJn6dJTsq4efDoizOPm0G1iLfE+48SLm/Kuyw31Ayiy1Q7
uoIS/pUBD+7Zt0DUhG9QjfwWPDFtwLdavRUeG7ivFpyRxSN486h6+1qhjmSc
drNUBg8M85XIP9QKv/7WcvxOlsHtXTgf4z1bofmL5pauzxR8mzYiiOW1wqCL
ab0/SOHNLdbPPym0gdPY42ZbJ1G8wkxuWXNnG3hNxc9NmovgHz4wjj0wboOW
Gxz1k/s34rmPz8+Hnm4DcopfkbnGBjwk6NbBPdlt8K17A8NyFxmXEa1nlUi3
w86HfnbPP69TewOTz8pubYcdVa2c84pr1AfNln3xuu2ApvPQ/ZJXqHK3Gppt
rdohtcW140UAh7p5Y9PH5evtENf229I1aIaqvKH19uGVdlgG00nWEzqV6Zsm
VCrUASQac0aYZ5CaV388UU62A1InFcqW27upW5PbIib3dID6u4fb2IfrqOqC
HZ53gjrAJZFSrvH7M6pF7jakMTvAR3u3bf2HEfSnV+Z786kO0Kwkn3KijaEv
v9npvFnvAGGnbdHapAl0Z1KPWuKmTpDdyBdO2vkL1eHrE99u1wkW5LhXlgoz
6F6ewbHLdZ0wblyYhucsofNuD93oPZ1wOfqdbFr0Mvqh4vSQxWgnWN9ZMM87
u4Lqxw+1b+LpAnL4/Za3lDXUkItWXmHUBcXpiZyP/5IAW2fcEXlNjOcEaRrX
8YCbsWbJLmoXHH2/JaR3Ky8kRJ6vP97YBd7WrM/OMbxQs7BGujPeBWk3L8WA
Dh8c+yMfiCh1Q/7B7PJH1/nhDMPWXDGjG/omo37ECghC9JZH7ia53dBQWZZ4
wkYQcs+wo91edcMeiQhR9LEgsPuC3+XXd8Pg5nsZl3SFwL/9trImTw+srsY0
PDu2ASIq61Z0LvbAkFh4q4HLRnjIJS5zMr4HsEm5sPm/NwIV7HdfTOuB4SP9
FXODG4Hry6jP+3964NJs/nCVnQhcf8vTs3+kB/RaYqdoJqKQWWBcambXCwqh
lFZ2pBiUsRIaPTx6YTwCC2i/Jwb9So1jicG9ELt1TepCiRhs/ttRofZWLywo
q5CrGWKQnxmacrSmF95zaQTSTMXh32ulnrb6fWA0+/DkvQVxcLmRI1V0uA+2
/qt+pEpEAkRSEitX7PrAMPtwSoGqBHjfclDKv9QH7gv2afHWErD5HtfQ9Js+
0C+0LMELJeDa0xM2aTv6IV7TkMprLgl6+YY8bKN+WPPJ3PHVURKYBapv9h3t
h/4qVVPDAEkwKuKI0nz7YfPXbJuQdEmYKnnSsKOwH0zNTP3WuyXBqXzKtEF5
AE5WNugpn5ICAXxgSkF3AOZ/e3hpeUnB+6/VucEmA2A11i7HdUkKxKoerMm6
DIC7cFS4cIYUVNebfPJ+NAAfG4/lfq6Tgl296Tr8MoOQ66OpvLRLGgb7IukO
6oMwsXw/cspQGpIHPG+/3DsIlrdd9385LA3sYYNJG9tBMJ0qGWk6Kw0PRhiF
eRmD8NswI/V3sjTwzOgommwcgoLuaum7A9IQRZeavyU/BLFfzNcd2dIw37TQ
MKg5BK6PIz25JqVhvLA8NOzQELyGtdXJVWloPmvRUhIzBJYjA1etFChw+KhW
werNIegMyoqWV6PAVwPRyCMPh0D5TcWNuh0U+FeqS22sbAhWVfcLNRlRIKve
JVphegi0i0AiwoEC4mVmNv6kYRhRIc+ddaFAcoHatk8iw7BC3XtA4xwFrsT+
7LLdPgxRFOtDPhcp4LY3bMdNj2GIVPdO+OcmBbSe3h5c7h4Gp5t27cGfKVBw
O/iNxcgwLNQ/TaB+pYDCFdvr92eGITvUqna6mvievbzebjEaZKlLzUm3UmB+
4/MUXwsa/Ff2yf4vFgWClm+4lp2igUlekCh7jALj4/77+L1oEHwmQdPzJwUG
KnVZT+JpMGkb4Kk+R8QbTt3f95kGIQXCE6V8CBiceyKmXk8DrUrDV08EEXhj
kzB6sZcGqS8m4q5sRKBgl2WG2BwNZEWfqCxJIVA9PTGrgtChIi+/UlgFgXif
QZqlAh30G8oi3dQQQOlN9RdU6UCTWWss0ESgrOl1Lr6bDjOfH8/P7UKguPDy
UafjdHA8quD7nyECWnEGcfL2dEhv3Pe1EkWgxGHl3YAzHeojo9TfmCDwVih+
y+kgOtyVwHltDiOwl3XAZlMoHQa/fxslWxLzfybfGIymg4CJ3JvCowiU+9+c
Pn2LDqWFLt2lJxDADh5X35xJvN9enClng0DFZsnTQ4/okOgoIHrBDoFvzVnV
Z14Slgr4M+aIQKt2ftbZRjrcSHPt4HZHwFrwXJNCJxFvudO7YQ8Euhia3LQB
OrwTi28v8kKgP6PEz/kHHfiuLl4S8UXgtF9w7pYZOrQkMO0K/RAYNtvTRVui
w9dPKhq6AQiwZj+hLkIMcJi6fYRyHgGvpishihKEJS7Onr+AwHgBVkiXZYCv
q5bhl2AEftp9E3fVZEAa6mepegmBwF03DinpMEBUdtXT7DICU+SjkQx9Bqgy
IqqtQxGYL2tju5ozQEX0ytTBcATC0u/KKh9nwNXc1I3bIhBY9jl1jHmKAV1P
0oRJkQhEm8pdferMgMhwe+lawiT5oQ9u5xjQUKt4LD6KyO/M45/KQQzY9E/z
4M4rCPA2uimxLjOA/GJotIlwUr6qXV40A973+qY7RyMgeGU82T2JAUslW7nY
hFNtX+Aqtxgwo2bv6BSDgMjOwFnWPQaIK/z8Wk04jV9HM/8RAw5GXLBXiUVA
gjZzxqOAAcMXyAcuEr774X3G1pcMwFbinpURRtLCa9hviXEPi6d/CGd7G63k
f2HASxkfh01xCGwyWdf2rGJA//3MSUPCf8tWeKo2MkCia2usFWGl6YTskQ4G
zJNldE8Rzq8/3FIwQFxqFJCtJwmr5QnxerEY4O9+7rIZ4cLIJn21HwzIVxe0
0CC8zSYtYHSaAdKQ+ZmL8D9aJ58+W2LA3HHbyRbif3bxUXq8uJlQEHh4NYPw
m6HeDepCTCj7KC50hLDe+xxsTJwJLQbrOotE/O9vnb30XJYJOpmb7mQT1j+n
VHxOiQmNY5QjuoQ/ER1SXZMJ+Y62oTixnsYyzyXHtZlAtabpmRI2rdO64o0x
YdS5p1uDyMec2O54XnMm5PIUM28T+Su0N7iWa8WEXxsk/5ok8isyfjC99ywT
5P8iPUsh6uG/XUczL3ox4ULsUk0jUS8XQ61zxAKZwNG7XMJLuJ/fucD8ChPM
1PfsdiDq6+Yxz2J2AhO+sLpIl4n6wzL9SmJTmRBg0zF/g6jPZ6phH8tymHD3
ON+X+yEIXDiQ3qTxiQmTQZ7oX0EIbE293171HxO+P/jJUg1EoLvjUY9LHRMy
Wvv95v0RMHIvZmT1EvHIJ0XGEPtJIL5yTmCBCYLdxku7PRHIxec2f9/Ngmjt
3Ep9BwROkleUEw1ZEBDUGfvgFAL8VtwaSmYs2G4S5ztji4D/sIiugzUL4ocf
i9yxJtZ3Vf1Q3XkW0LU8cq8eIfb7fsfAopcsSBuSTzIwQuBqvEvIwXcs+KFl
mLBnP9Fv6r3CGF9Y8PTqodrt+gg8dAiJl21kQcyvcDeyHgLeYamZNyZYIMEv
kx21HYH1d1Sqjzobape2+/vLIpAVYtITv5MNZ/1ZSUYIAto6Vb9z9rChKdvj
soA0Am7/1Ck2m7FBjCeJdFeM6EdPO+N1Xdiwbf7yXAQZgVu3Jw4tZ7FBgSv/
dfoscT74UFpShUaATSsQ1WikgPGmQFrJ5Ag4rmY10IMp8NCwwsRtbgTuvc24
8zqIAkuOlHyp1RHgcphYuuJPgbIHVO9w4VFYnOWqFfeigC4iOm26fRROagoY
KBDnm4bEa95u71EY1VtVbkMpICUwrbnCGoXmhy+6WgUoMDFz6aJ5/xhYMMd7
0rOkQeZgzrjqs++QOtA4uUSVAj+3hwEL3j+AUywvpjguCTum5rzkrSeh1qdJ
6BCvJJzn+EOC3G+QCasKVdGXgHQDhW+PE/6A/0e/zwJe4hA1OHMxNHQKihzO
ebXkiYGGkf2dKYdpUBrZG/ZzWhRSOsd/3LWagdcnK59DlgiUaAq87debBVf6
UIa8z0ZI/nDyvcWOORDt/WqRtkcYwrZv/E9XaR5ysB72GfkNoHbalrg4LQA7
Mc8gfKsQpFTX/Q5eXgD0mbKIlaYglP5olKxnLMIx6X2aGn8JwMSCMZZTyYFB
1dk/lXFk6DcaeHavbAm4pYK9Vkv5IRklX9F9tAy/11dSDy7zwXSY883FuyvA
7fy6PArjA/8Hqs/0r69C4Y4v6JM7vPD8csROeb81iOq+M05Z5oEHqct/1FzX
IchQ69WFszzwrCQx3VeFhA3vZrKHO7hBILXq1dodEhZe5cEsteaGbwmyPuoi
XNil0dyGiCYuYA/scVKK5cJquVL+PniKC85aeU+ULHNhVRM3bx8bIoG+klup
aBA3tj80K6L7PAnkRzOitOjc2FgE5R66gQSONX3sIUceLD04WEH4wDrK4R9P
cGniwZJc4sq9rq+hs27CFaEWvNjVR/b09epVdLH0HM/RSl5MyVvlU67oKnra
OTlqSo8PM9b9Ff3YfwXdpFmZsf01H/b8iOoPrcpl1OhEJX2vCj8m2xsgd377
Murlv6S7focfo7QeLvJ4uIT+yDusfFqEjNmVb99tRF5C2wxOWyTHkjF4YlPj
HcdBq8oRxevxZKyrSOmaQgwHfW/SMZ+YQMYaWmwKO6M4aLaFZX7cdTJmU1Mo
YhrGQd0c9NfD0sjY9ePnvZWCOOhsmNS7c7lkbNRA0mj6NAeVKWtUPPiVjNEN
8ioG9DmokNH1BdMKMtafceTqo70cdAU3a8aqyFh2WfxTZz0Oyqj5FGlUS8YE
5/evsHdx0OKewu7drWTsr33RcrNqHNRoISFVmU7Ggl/W/lKR5qA7IzF3RSYZ
y9/XffOHBAdVXF82UGCTMdxVPPlfMQ7KRw4Zkx0nYw77Xj44IMxBmymupuJ/
yFhfBknSj4eDfs3eJCs6TcbMkqay9nBx0DcKvb+FZ8nY4emzkaT1RfS+mtUj
gUUy9uuNle39pUU0uVjoIv8SGfs+XXDUfXERjdr5zZJ3hZjPUDF31/wiGvgm
Tol7jYwdF3pqtTKziLrsNV5cXydj7kIqTnVTi+j/AM7fais=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ZdFE2g==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox["\"premium rel err\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6737350749045362`*^9, {3.673735172942709*^9, 3.673735238219043*^9}, {
   3.673736591379451*^9, 3.6737366454922132`*^9}, 3.673736687874827*^9, {
   3.6737367264719276`*^9, 3.67373676274842*^9}, {3.673741983768905*^9, 
   3.673742008989306*^9}, {3.673742046252355*^9, 3.673742076869539*^9}, 
   3.6737518524197073`*^9, 3.6737523420918107`*^9, 3.6737527391246543`*^9, 
   3.6737532138158073`*^9, 3.67382557762246*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "nn", ",", "f"}], "]"}], "-", "\[Sigma]S"}], 
      "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "nn", ",", 
         RowBox[{"1.2", "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", "nn", ",", 
         RowBox[{"0.8", "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\[Sigma] rel err\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6737411681968126`*^9, 3.6737412897088523`*^9}, {
   3.673741375679921*^9, 3.673741376196063*^9}, {3.6737417026928782`*^9, 
   3.6737417062629156`*^9}, 3.673752127109142*^9, {3.6737523518721905`*^9, 
   3.6737523532587795`*^9}, {3.673752824167962*^9, 3.6737528694076576`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
7bAokRARz96P1UZFKPwLkDwLzQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox["\"\[Sigma] rel err\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6737528774180584`*^9, 3.6737532266563435`*^9, 
  3.6738256042339087`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functional n", "Subsection",
 CellChangeTimes->{{3.6737534540931687`*^9, 3.6737534593106947`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nfunc", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["resATM", 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]], ",", 
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["resATM", 
           RowBox[{"[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]], "+", 
          SubscriptBox["resOTM", 
           RowBox[{"[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]]}], ")"}]}]}], "}"}], 
     "\[Transpose]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673754034384546*^9, 3.6737540530249944`*^9}, {
  3.673754485513299*^9, 3.6737544992759676`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", "f"}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", "f"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", 
        RowBox[{"1.2", "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", 
        RowBox[{"1.2", "f"}]}], "]"}]], ",", 
     FractionBox[
      RowBox[{"diff", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", 
        RowBox[{"0.8", "f"}]}], "]"}], 
      RowBox[{"pv", "[", 
       RowBox[{"x", ",", 
        RowBox[{"nfunc", "[", "x", "]"}], ",", 
        RowBox[{"0.8", "f"}]}], "]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<premium rel err\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673735023103979*^9, 3.673735065928793*^9}, {
   3.673735156998191*^9, 3.6737352315555964`*^9}, {3.673736600222391*^9, 
   3.673736639314528*^9}, {3.6737366714057083`*^9, 3.673736756119498*^9}, {
   3.6737420001361694`*^9, 3.673742002484271*^9}, {3.673742039329338*^9, 
   3.6737420707845697`*^9}, 3.6737518432594795`*^9, {3.6737523300050054`*^9, 
   3.673752335060376*^9}, {3.6737526578791895`*^9, 3.673752719150693*^9}, {
   3.6737539354433045`*^9, 3.673753953573886*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
bC0IxmcUVzY3t/yJ1DARC0H4H7giid4=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox["\"premium rel err\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.673754006596418*^9, 3.673754097261242*^9, 
  3.673754318785267*^9, 3.673754516012022*^9, 3.673825649333395*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", 
         RowBox[{"nfunc", "[", "x", "]"}], ",", "f"}], "]"}], "-", 
       "\[Sigma]S"}], "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", 
         RowBox[{"nfunc", "[", "x", "]"}], ",", 
         RowBox[{"1.2", "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"implVol", "[", 
        RowBox[{"x", ",", 
         RowBox[{"nfunc", "[", "x", "]"}], ",", 
         RowBox[{"0.8", "f"}]}], "]"}], "-", "\[Sigma]S"}], "\[Sigma]S"]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1.0", "/", "6"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\[Sigma] rel err\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ATM\>\"", ",", "\"\<OTM\>\"", ",", "\"\<ITM\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6737411681968126`*^9, 3.6737412897088523`*^9}, {
   3.673741375679921*^9, 3.673741376196063*^9}, {3.6737417026928782`*^9, 
   3.6737417062629156`*^9}, 3.673752127109142*^9, {3.6737523518721905`*^9, 
   3.6737523532587795`*^9}, {3.673752824167962*^9, 3.6737528694076576`*^9}, {
   3.673754543906227*^9, 3.6737545540397825`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
UfFpLw3+D2A1dNU=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
m/Pvv/yzreTIYLl778Ts7P/nlaXJ8D/pBfC/
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVVnk8lG0XtkakeNssESpSUrRqOc+gBS1KWdJCKm1avuil0iZ6ZS9DSKVC
Qomi1ZJ93wbDMGa3jd1g7N+Zv57f+Z3nPuc617nOuW8t5+vW5yXExMTei4uJ
ib6H+x/V2tgUEmZ+WnzWIwVC+3D5ker/FRLMuxe8DVnzCMGXRXXmwYVEkOHQ
E3uzeUTUzQ91O4oLiRwPM5d9ivIEe6SComVcRJy4UrfVolKW+Ga75NhLmyIi
e8yfEJrJEv99d6xfdLOIYEw6nEzMkiH0bw/VyyQXEZmNjinKv+YQt6aWNvYu
KyYSyJHX7lGlCPNTZ2wvGBcTYmLT971cpAjV7KRGpk0xoeUzsT5QKElkP9hF
pQQXE5m2kosYqySJUOYTu4PJxYTrpxYx7b8SxFmTGmpRsSjeiOYtRwlCVvJs
00+xEoLqMDdlX7w4QTubYr9RvYQQnvbVLTggTqQUjDSlGJcQRy1Vhy3HxIgj
T/ya39wsIdaser7rmo0YsbKj9rhKSAkxV8v5lPRcMWJ0nxrteTL647NXbnsw
C9FzP9N8uSXE54xDme5XZsD18pjDrFgp5r9Edu+eBigntXiql2K9NYttrk8D
J5DScsW2lBjIWh8W5j8Fmb3LTvJulhJGRe/l2zSnwO+QS+vpENF5ey32n0nQ
VxxvPVJSivml47ulJ2Hmhumpcm4p9ocdQU2fgJraAPpu8TLCvarE0Or8BLwz
ajiVrV6G8T1Dd6tPwK0wjbat28swftKhJNo4mAsunE6zLSO8+vsib74aB1Wb
tLY1bmXI3+HVIefHoSdj4nRcSBlxLnCD5aDROGQv2c1QTykjipW3ND2VHodQ
jyDHFyVlRGfMxG4LuhCcmxoZirwygnH3/fPlv4SwyVjTyV+8nHjldurM1Esh
yERfYkpqlKN+htlV3kKgTaQ73dtejvwNdfheE0LKiSnmqG05oXI2s3mBoxDu
/9lz5oabyD741+GYEA6rh7C6QsqJ7R2LTY4dEoL2/aYzZ1PKMV99fNcBIYy0
abFbS0TxZTPkDwuhhLjibMsrx36PdL+xE0J07Dd2tXgFsV9vWXb4WSG4is84
W2hUID+WEs1uQgDnfZy87RWEto+msY2fEBTzQ8/utKtA/er4jsQKgbOCxslw
E50fzYzLEkKF/KUA8vMK5M9xx3aWEDKHx4zc0ipQ/5wYx7nj8KblCe1ITQX2
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
D8N8mB/gmz9l24z1uZUyuXy4GHxcK+5WM/Kz4vaSUj4sDjWrGfNpFt0Hu+T/
8CHv2boH+8nNqA/SbEAqH9TDxelD6c04X++stCL5UBbBD9ib14z5I8PXBfHB
M7Jhe3RtM74vLhzL8OZD3cuPkSYDovzjYjrX+fDgVdi+8FlRvvPr5rjwQf/N
vdHO+TTEu8788Ck+0GIvxO/UoCE/e8tnj/Hhv3dHjoWuo+H8PNNSPMiHTXE7
JLk7adivg2+99vCBHb8qfesBGr4fuk8wt/Ah5MOCMwEnaDifm5M3K/Fh58fx
BYzLNMRTS27jd0NXEifb6A4N+Q6zby3qhoiUyqtPntKwviKDDe+6YTD1bfm6
RNH598ltx7vhRNagabl2C/bPPZ62twtkc1oGNYxakH+r39o6XZCZWxh706QF
+cq+Wy7dBYoFUTMqTi2I/9cBk6JOKCwz+XXxVQviNVMv398JNyvWXvqT0oJ4
4xR0DDpBs2qxsuKfFsznIeAqdsKd2q5b32ktOK+mt0OoHbC+6ZnhHOVW3Fcb
/KIvdUBr813mcd1W/P/vb2WrDvBvOR/yaUsrvj+9L05u6gBum3HvMZtWrPdI
Yq94B0TxWInvn7div58WP4htB8lhQ00TBTryb8OXG+CBF3PRaLAaHfEdcZCm
82C0cqy8VY+O85b+7kgZDzoTszw899IxX+ppejwPqk5bVKc+oOP+UYhMdeLB
vgP68dNBdMTrKal7mAe5xgvu7o8R2U28boIHXxc16HT8ENl19GOaPIgsc7qv
MUTH/f1LKZrLBaUfZsdcxdrQX1Z8qpEL/vE6a37Nb0P+bky4lHDh3sOeBpu1
ItugY88nLjhv8VwXdK4N+yUhr3KHC/rvQlonG9sQr/sKteVciA+5mW7BE/kH
vn1bxAWNezZ+L4bbEL+d2yM5zGevtmmjIgPv23aN1FEO+O+ZmftIg4H1Wzko
9HJAaiOLUaXPwPu6wTqKw4FRhQ8Bly0YmP8ybVMtB65PPj3zw46B++1ciEkJ
Bzo7XbfOcWFg/4NN/83hgHOjlcIxd1H8O3drMznQkm/EeestspV/H/nMgWNp
i3/2hzLw/jO/fTWWA1WvhcG73oj820+fDuRA7u3s7c2/GdgfypWP5zhgfOGt
om4ZA/myfiJ1hAPpx3za3ZsY2G+vgce7OBC/3vK54ggD9fnr8uASDhQOdQtW
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox["\"\[Sigma] rel err\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ATM\"", "\"OTM\"", "\"ITM\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6737545646497717`*^9, 3.6738256884738903`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"nfunc", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673754717971363*^9, 3.67375472569285*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({0.00006128571428571428`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6737547260932817`*^9, 3.673825695514802*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
YcF9dkQ74/8Bhdi8pg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 13.66},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 3}, {13.687402411066842`, 14.43138532278304}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6737547261245313`*^9, 3.6738256955253153`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 998},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 745, 15, 92, "Input"],
Cell[1306, 37, 1089, 29, 121, "Input"],
Cell[2398, 68, 1308, 35, 120, "Input"],
Cell[3709, 105, 448, 11, 31, "Input"],
Cell[4160, 118, 1399, 38, 161, "Input"],
Cell[CellGroupData[{
Cell[5584, 160, 104, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[5713, 165, 97, 1, 49, "Subsection"],
Cell[5813, 168, 1047, 28, 33, "Input"],
Cell[CellGroupData[{
Cell[6885, 200, 1064, 28, 33, "Input"],
Cell[7952, 230, 496, 11, 56, "Message"]
}, Open  ]],
Cell[8463, 244, 1070, 28, 33, "Input"],
Cell[CellGroupData[{
Cell[9558, 276, 1903, 43, 72, "Input"],
Cell[11464, 321, 18402, 366, 253, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29915, 693, 107, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[30047, 698, 2466, 62, 117, "Input"],
Cell[32516, 762, 26287, 496, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58840, 1263, 2300, 61, 135, "Input"],
Cell[61143, 1326, 22573, 439, 243, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83765, 1771, 98, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[83888, 1776, 174, 3, 31, "Input"],
Cell[84065, 1781, 143, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84245, 1788, 2362, 61, 117, "Input"],
Cell[86610, 1851, 37891, 688, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124538, 2544, 2202, 60, 115, "Input"],
Cell[126743, 2606, 20878, 411, 243, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[147670, 3023, 104, 1, 49, "Subsection"],
Cell[147777, 3026, 801, 24, 31, "Input"],
Cell[CellGroupData[{
Cell[148603, 3054, 2579, 67, 117, "Input"],
Cell[151185, 3123, 27300, 516, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178522, 3644, 2271, 60, 115, "Input"],
Cell[180796, 3706, 24976, 478, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205809, 4189, 592, 16, 31, "Input"],
Cell[206404, 4207, 640, 13, 21, "Message"],
Cell[207047, 4222, 3977, 80, 251, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[211085, 4309, 106, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[211216, 4314, 100, 1, 39, "Subsubsection"],
Cell[211319, 4317, 948, 27, 33, "Input"],
Cell[CellGroupData[{
Cell[212292, 4348, 267, 8, 52, "Input"],
Cell[212562, 4358, 184, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212783, 4367, 244, 7, 52, "Input"],
Cell[213030, 4376, 114, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213181, 4382, 1254, 34, 73, "Input"],
Cell[214438, 4418, 496, 11, 56, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214971, 4434, 1258, 34, 73, "Input"],
Cell[216232, 4470, 495, 11, 56, "Message"],
Cell[216730, 4483, 496, 11, 56, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217263, 4499, 1903, 43, 72, "Input"],
Cell[219169, 4544, 18016, 361, 253, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237234, 4911, 110, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[237369, 4916, 2366, 63, 122, "Input"],
Cell[239738, 4981, 25534, 485, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265309, 5471, 1879, 52, 108, "Input"],
Cell[267191, 5525, 22441, 435, 235, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[289681, 5966, 101, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[289807, 5971, 174, 3, 31, "Input"],
Cell[289984, 5976, 145, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290166, 5983, 2300, 62, 102, "Input"],
Cell[292469, 6047, 38593, 700, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331099, 6752, 1821, 51, 108, "Input"],
Cell[332923, 6805, 22436, 436, 235, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[355408, 7247, 107, 1, 39, "Subsubsection"],
Cell[355518, 7250, 801, 24, 31, "Input"],
Cell[CellGroupData[{
Cell[356344, 7278, 3121, 83, 142, "Input"],
Cell[359468, 7363, 25772, 491, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385277, 7859, 2535, 69, 128, "Input"],
Cell[387815, 7930, 28620, 538, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416472, 8473, 237, 6, 31, "Input"],
Cell[416712, 8481, 642, 13, 21, "Message"],
Cell[417357, 8496, 3762, 73, 243, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[421180, 8576, 170, 2, 70, "Section"],
Cell[421353, 8580, 676, 11, 52, "Input"],
Cell[CellGroupData[{
Cell[422054, 8595, 97, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[422176, 8600, 948, 27, 33, "Input"],
Cell[423127, 8629, 496, 11, 56, "Message"],
Cell[423626, 8642, 498, 11, 56, "Message"]
}, Open  ]],
Cell[424139, 8656, 967, 27, 33, "Input"],
Cell[CellGroupData[{
Cell[425131, 8687, 971, 27, 33, "Input"],
Cell[426105, 8716, 498, 11, 56, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426640, 8732, 1953, 43, 72, "Input"],
Cell[428596, 8777, 18036, 361, 253, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[446681, 9144, 107, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[446813, 9149, 2517, 62, 117, "Input"],
Cell[449333, 9213, 27768, 522, 274, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477138, 9740, 2353, 62, 135, "Input"],
Cell[479494, 9804, 23543, 454, 234, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[503086, 10264, 98, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[503209, 10269, 174, 3, 31, "Input"],
Cell[503386, 10274, 143, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[503566, 10281, 1756, 45, 77, "Input"],
Cell[505325, 10328, 34170, 628, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[539532, 10961, 1505, 41, 75, "Input"],
Cell[541040, 11004, 22911, 443, 227, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[564000, 11453, 104, 1, 49, "Subsection"],
Cell[564107, 11456, 801, 24, 31, "Input"],
Cell[CellGroupData[{
Cell[564933, 11484, 2030, 52, 97, "Input"],
Cell[566966, 11538, 43717, 784, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[610720, 12327, 1672, 45, 95, "Input"],
Cell[612395, 12374, 43238, 776, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655670, 13155, 237, 6, 31, "Input"],
Cell[655910, 13163, 611, 12, 21, "Message"],
Cell[656524, 13177, 3705, 72, 240, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
